$TEST #0
-------------- PARSING TARGET --------------
  @raw :                         
  @size: 24 chars (73 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

[Parser] [1;31mERROR[0m: Empty expression.
Expression is empty.                                                                

$TEST #1
-------------- PARSING TARGET --------------
  @raw : Sin[     2         ]
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 9

    [3] DELIM
      @val: END
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 9

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]
    @postfix: 2 Sin
    @prefix : Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #2
-------------- PARSING TARGET --------------
  @raw : 2
  @size: 1 chars (50 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 2
    @postfix: 2
    @prefix : 2

------------ INTERPRETING TARGET -----------
  @infix : 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #3
-------------- PARSING TARGET --------------
  @raw : 1234567890.1234567890
  @size: 21 chars (70 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 1234567890.1234567
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 1234567890.1234567
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 1234567890.1234567
    @postfix: 1234567890.1234567
    @prefix : 1234567890.1234567

------------ INTERPRETING TARGET -----------
  @infix : 1234567890.1234567

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1234567890.1234567

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1234567890.1234567

$TEST #4
-------------- PARSING TARGET --------------
  @raw : 2.3
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2.3
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.3
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 2.3
    @postfix: 2.3
    @prefix : 2.3

------------ INTERPRETING TARGET -----------
  @infix : 2.3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.3

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.3

$TEST #5
-------------- PARSING TARGET --------------
  @raw : 2.
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2.0
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.0
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 2.0
    @postfix: 2.0
    @prefix : 2.0

------------ INTERPRETING TARGET -----------
  @infix : 2.0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.0

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.0

$TEST #6
-------------- PARSING TARGET --------------
  @raw : .2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 0.2
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0.2
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 0.2
    @postfix: 0.2
    @prefix : 0.2

------------ INTERPRETING TARGET -----------
  @infix : 0.2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.2

$TEST #7
-------------- PARSING TARGET --------------
  @raw : 2.3.    
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2.3.    
~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Decimal point cannot appear more than once in one numeric value.                    

$TEST #8
-------------- PARSING TARGET --------------
  @raw : 2.3.4   
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2.3.4   
~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Decimal point cannot appear more than once in one numeric value.                    

$TEST #9
-------------- PARSING TARGET --------------
  @raw : .2.3    
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

.2.3    
~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Decimal point cannot appear more than once in one numeric value.                    

$TEST #10
-------------- PARSING TARGET --------------
  @raw : .       
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

.       
^
[Parser] [1;31mERROR[0m: Invalid expression.
Decimal point cannot be used solely.                                                

$TEST #11
-------------- PARSING TARGET --------------
  @raw : x
  @size: 1 chars (50 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : x
    @postfix: x
    @prefix : x

------------ INTERPRETING TARGET -----------
  @infix : x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #12
-------------- PARSING TARGET --------------
  @raw : abcdefghijklmnopqrstuvwxyz
  @size: 26 chars (75 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: abcdefghijklmnopqrstuvwxyz
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: abcdefghijklmnopqrstuvwxyz
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : abcdefghijklmnopqrstuvwxyz
    @postfix: abcdefghijklmnopqrstuvwxyz
    @prefix : abcdefghijklmnopqrstuvwxyz

------------ INTERPRETING TARGET -----------
  @infix : abcdefghijklmnopqrstuvwxyz

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: abcdefghijklmnopqrstuvwxyz

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

abcdefghijklmnopqrstuvwxyz

$TEST #13
-------------- PARSING TARGET --------------
  @raw : x_2
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x_2
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x_2
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : x_2
    @postfix: x_2
    @prefix : x_2

------------ INTERPRETING TARGET -----------
  @infix : x_2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x_2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x_2

$TEST #14
-------------- PARSING TARGET --------------
  @raw : x2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x2
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x2
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : x2
    @postfix: x2
    @prefix : x2

------------ INTERPRETING TARGET -----------
  @infix : x2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x2

$TEST #15
-------------- PARSING TARGET --------------
  @raw : x_2_2
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x_2_2
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x_2_2
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : x_2_2
    @postfix: x_2_2
    @prefix : x_2_2

------------ INTERPRETING TARGET -----------
  @infix : x_2_2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x_2_2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x_2_2

$TEST #16
-------------- PARSING TARGET --------------
  @raw : _23x    
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

_23x    
^
[Parser] [1;31mERROR[0m: Invalid expression.
Underscore can only be used in the middle of variable name.                         

$TEST #17
-------------- PARSING TARGET --------------
  @raw : 2_3     
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2_3     
~^
[Parser] [1;31mERROR[0m: Invalid expression.
Underscore can only be used in the middle of variable name.                         

$TEST #18
-------------- PARSING TARGET --------------
  @raw : x_y
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x_y
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x_y
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : x_y
    @postfix: x_y
    @prefix : x_y

------------ INTERPRETING TARGET -----------
  @infix : x_y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x_y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x_y

$TEST #19
-------------- PARSING TARGET --------------
  @raw : x_      
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

x_      
~^
[Parser] [1;31mERROR[0m: Invalid expression.
Underscore can only be used in the middle of variable name.                         

$TEST #20
-------------- PARSING TARGET --------------
  @raw : Sin[2]
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]
    @postfix: 2 Sin
    @prefix : Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #21
-------------- PARSING TARGET --------------
  @raw : Log[2., 1024]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2.0
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 6

    [4] NUM
      @val: 1024
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.0
      @pos: 4

    [1] NUM
      @val: 1024
      @pos: 8

    [2] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2.0, 1024]
    @postfix: 2.0 1024 Log
    @prefix : Log 2.0 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2.0, 1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2.0, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2.0, 1024]

$TEST #22
-------------- PARSING TARGET --------------
  @raw : Help[]
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] VOID
      @val: None
      @pos: None

    [3] DELIM
      @val: END
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Help[]
    @postfix: Help
    @prefix : Help 

[System] [1;31mERROR[0m: Timeout.
Interpreting chain is timed out its limit 3sec after 1000 iteration. Use Set_sys_var["Computation_Timeout", sec] to customize timeout limit. 

$TEST #23
-------------- PARSING TARGET --------------
  @raw : E
  @size: 1 chars (50 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2.718281828459045
      @pos: 0

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.718281828459045
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : 2.718281828459045
    @postfix: 2.718281828459045
    @prefix : 2.718281828459045

------------ INTERPRETING TARGET -----------
  @infix : 2.718281828459045

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.718281828459045

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.718281828459045

$TEST #24
-------------- PARSING TARGET --------------
  @raw : 2 + 3
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3
    @postfix: 2 3 +
    @prefix : + 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

5

$TEST #25
-------------- PARSING TARGET --------------
  @raw : 2 - 3
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 - 3
    @postfix: 2 3 -
    @prefix : - 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 - 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-1

$TEST #26
-------------- PARSING TARGET --------------
  @raw : 2 * 3
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3
    @postfix: 2 3 *
    @prefix : * 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #27
-------------- PARSING TARGET --------------
  @raw : 2 / 3
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / 3
    @postfix: 2 3 /
    @prefix : / 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 / 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.6666666666666666

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.6666666666666666

$TEST #28
-------------- PARSING TARGET --------------
  @raw : 2 % 3
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 % 3
    @postfix: 2 3 %
    @prefix : % 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 % 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #29
-------------- PARSING TARGET --------------
  @raw : 2^3
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 2

    [2] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^3
    @postfix: 2 3 ^
    @prefix : ^ 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2^3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 8

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

8

$TEST #30
-------------- PARSING TARGET --------------
  @raw : 2**3
  @size: 4 chars (53 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 3

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 3

    [2] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^3
    @postfix: 2 3 ^
    @prefix : ^ 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2^3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 8

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

8

$TEST #31
-------------- PARSING TARGET --------------
  @raw : 2!
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2!
    @postfix: 2 !
    @prefix : ! 2

------------ INTERPRETING TARGET -----------
  @infix : 2!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #32
-------------- PARSING TARGET --------------
  @raw : (2 + 3)
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3
    @postfix: 2 3 +
    @prefix : + 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

5

$TEST #33
-------------- PARSING TARGET --------------
  @raw : Help["Sin"]
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] STR
      @val: Sin
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] STR
      @val: Sin
      @pos: 5

    [1] CMD
      @val: HELP
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Help["Sin"]
    @postfix: "Sin" Help
    @prefix : Help "Sin"

[System] [1;31mERROR[0m: Timeout.
Interpreting chain is timed out its limit 3sec after 1000 iteration. Use Set_sys_var["Computation_Timeout", sec] to customize timeout limit. 

$TEST #34
-------------- PARSING TARGET --------------
  @raw : Help["Sin", "Cos"]
  @size: 18 chars (67 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] STR
      @val: Sin
      @pos: 5

    [3] DELIM
      @val: CONT
      @pos: 10

    [4] STR
      @val: Cos
      @pos: 12

    [5] DELIM
      @val: END
      @pos: 17

  Running infix to postfix converter... [1;36mdone[0m
    [0] STR
      @val: Sin
      @pos: 5

    [1] STR
      @val: Cos
      @pos: 12

    [2] CMD
      @val: HELP
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Help["Sin", "Cos"]
    @postfix: "Sin" "Cos" Help
    @prefix : Help "Sin" "Cos"

------------ INTERPRETING TARGET -----------
  @infix : Help["Sin", "Cos"]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Help["Sin", "Cos"]
^
[Interpreter] [1;31mERROR[0m: Signature is not found.
Inferred signature is 
  TER Help[STR, STR]
where candidates are 
  [0] TER Help[]
  [1] TER Help[STR]
Use Help["Help"] for more information. 

$TEST #35
-------------- PARSING TARGET --------------
  @raw : Help["Sin]  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin]  
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Double quote for string token is not closed.                                        

$TEST #36
-------------- PARSING TARGET --------------
  @raw : & + 2       
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

& + 2       
^
[Parser] [1;31mERROR[0m: Invalid token.
Unknown token & is encountered.                                                    

$TEST #37
-------------- PARSING TARGET --------------
  @raw : Sin ~ Cos   
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin ~ Cos   
~~~~^
[Parser] [1;31mERROR[0m: Invalid token.
Unknown token ~ is encountered.                                                    

$TEST #38
-------------- PARSING TARGET --------------
  @raw : 2 + Sin 
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 + Sin 
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with function or command token.                      

$TEST #39
-------------- PARSING TARGET --------------
  @raw : Quit    
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Quit    
^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with function or command token.                      

$TEST #40
-------------- PARSING TARGET --------------
  @raw : 2 +     
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 +     
~~^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with operator token which is not ) or !.             

$TEST #41
-------------- PARSING TARGET --------------
  @raw : Sin[2 * 
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[2 * 
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with operator token which is not ) or !.             

$TEST #42
-------------- PARSING TARGET --------------
  @raw : Sin[    
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[    
~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with delimiter token which is not ].                 

$TEST #43
-------------- PARSING TARGET --------------
  @raw : Log[2,  
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2,  
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot terminate with delimiter token which is not ].                 

$TEST #44
-------------- PARSING TARGET --------------
  @raw : Help["Sin"  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"  
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #45
-------------- PARSING TARGET --------------
  @raw : 2 + "Sin"   
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 + "Sin"   
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #46
-------------- PARSING TARGET --------------
  @raw : [2] 
  @size: 4 chars (53 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

[2] 
^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot start with delimiter or string token.                          

$TEST #47
-------------- PARSING TARGET --------------
  @raw : +2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: PLUS
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] OP
      @val: PLUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : +2
    @postfix: 2 +
    @prefix : + 2

------------ INTERPRETING TARGET -----------
  @infix : +2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #48
-------------- PARSING TARGET --------------
  @raw : -2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -2
    @postfix: 2 -
    @prefix : - 2

------------ INTERPRETING TARGET -----------
  @infix : -2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-2

$TEST #49
-------------- PARSING TARGET --------------
  @raw : *2  
  @size: 4 chars (53 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

*2  
^
[Parser] [1;31mERROR[0m: Invalid expression.
An expression cannot start with operator token which is not +, -, or (.             

$TEST #50
-------------- PARSING TARGET --------------
  @raw : ++--2
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: PLUS
      @pos: 0

    [1] OP
      @val: PLUS
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: MINUS
      @pos: 3

    [4] NUM
      @val: 2
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] OP
      @val: MINUS
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: PLUS
      @pos: 1

    [4] OP
      @val: PLUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : ++--2
    @postfix: 2 - - + +
    @prefix : + 2 - - +

------------ INTERPRETING TARGET -----------
  @infix : ++--2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #51
-------------- PARSING TARGET --------------
  @raw : 2 3
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] NUM
      @val: 3
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 2

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3
    @postfix: 2 3 *
    @prefix : * 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #52
-------------- PARSING TARGET --------------
  @raw : 2x
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] VAR
      @val: x
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * x
    @postfix: 2 x *
    @prefix : * 2 x

------------ INTERPRETING TARGET -----------
  @infix : 2 * x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2 * x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2 * x

$TEST #53
-------------- PARSING TARGET --------------
  @raw : 2Sin[2]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] FUN
      @val: SIN
      @pos: 1

    [3] DELIM
      @val: START
      @pos: 4

    [4] NUM
      @val: 2
      @pos: 5

    [5] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] FUN
      @val: SIN
      @pos: 1

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * Sin[2]
    @postfix: 2 2 Sin *
    @prefix : * 2 2 Sin

------------ INTERPRETING TARGET -----------
  @infix : 2 * Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1.8185948536513634

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1.8185948536513634

$TEST #54
-------------- PARSING TARGET --------------
  @raw : 2Help[]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] CMD
      @val: HELP
      @pos: 1

    [3] DELIM
      @val: START
      @pos: 5

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] CMD
      @val: HELP
      @pos: 1

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * Help[]
    @postfix: 2 Help *
    @prefix : * 2 Help

------------ INTERPRETING TARGET -----------
  @infix : 2 * Help[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

2Help[]
~^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #55
-------------- PARSING TARGET --------------
  @raw : x 3
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] NUM
      @val: 3
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 2

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 3
    @postfix: x 3 *
    @prefix : * x 3

------------ INTERPRETING TARGET -----------
  @infix : x * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 3

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 3

$TEST #56
-------------- PARSING TARGET --------------
  @raw : x y
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] VAR
      @val: y
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 2

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y
    @postfix: x y *
    @prefix : * x y

------------ INTERPRETING TARGET -----------
  @infix : x * y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y

$TEST #57
-------------- PARSING TARGET --------------
  @raw : x Sin[2]
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] FUN
      @val: SIN
      @pos: 2

    [3] DELIM
      @val: START
      @pos: 5

    [4] NUM
      @val: 2
      @pos: 6

    [5] DELIM
      @val: END
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 6

    [2] FUN
      @val: SIN
      @pos: 2

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : x * Sin[2]
    @postfix: x 2 Sin *
    @prefix : * x 2 Sin

------------ INTERPRETING TARGET -----------
  @infix : x * Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 0.9092974268256817

$TEST #58
-------------- PARSING TARGET --------------
  @raw : x Help[]
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: None

    [2] CMD
      @val: HELP
      @pos: 2

    [3] DELIM
      @val: START
      @pos: 6

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] CMD
      @val: HELP
      @pos: 2

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : x * Help[]
    @postfix: x Help *
    @prefix : * x Help

------------ INTERPRETING TARGET -----------
  @infix : x * Help[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

x Help[]
~~^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #59
-------------- PARSING TARGET --------------
  @raw : 2 + x
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] VAR
      @val: x
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + x
    @postfix: 2 x +
    @prefix : + 2 x

------------ INTERPRETING TARGET -----------
  @infix : 2 + x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2 + x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2 + x

$TEST #60
-------------- PARSING TARGET --------------
  @raw : 2 + Sin[3]
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] FUN
      @val: SIN
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 7

    [4] NUM
      @val: 3
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 8

    [2] FUN
      @val: SIN
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + Sin[3]
    @postfix: 2 3 Sin +
    @prefix : + 2 3 Sin

------------ INTERPRETING TARGET -----------
  @infix : 2 + Sin[3]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.1411200080598674

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.1411200080598674

$TEST #61
-------------- PARSING TARGET --------------
  @raw : 2 + Help[]
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] CMD
      @val: HELP
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] CMD
      @val: HELP
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + Help[]
    @postfix: 2 Help +
    @prefix : + 2 Help

------------ INTERPRETING TARGET -----------
  @infix : 2 + Help[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

2 + Help[]
~~~~^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #62
-------------- PARSING TARGET --------------
  @raw : (2)3
  @size: 4 chars (53 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: RPAR
      @pos: 2

    [3] OP
      @val: MUL
      @pos: None

    [4] NUM
      @val: 3
      @pos: 3

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 3

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3
    @postfix: 2 3 *
    @prefix : * 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #63
-------------- PARSING TARGET --------------
  @raw : 2!3
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] OP
      @val: MUL
      @pos: None

    [3] NUM
      @val: 3
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 2

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2! * 3
    @postfix: 2 ! 3 *
    @prefix : * 2 ! 3

------------ INTERPRETING TARGET -----------
  @infix : 2! * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #64
-------------- PARSING TARGET --------------
  @raw : Sin[Cos[2]]
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] FUN
      @val: COS
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 7

    [4] NUM
      @val: 2
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 8

    [1] FUN
      @val: COS
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[Cos[2]]
    @postfix: 2 Cos Sin
    @prefix : Sin Cos 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[Cos[2]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.4042391538522658

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.4042391538522658

$TEST #65
-------------- PARSING TARGET --------------
  @raw : Sin[Help[]]
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] CMD
      @val: HELP
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[Help[]]
    @postfix: Help Sin
    @prefix : Sin Help 

------------ INTERPRETING TARGET -----------
  @infix : Sin[Help[]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Sin[Help[]]
^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred signature is 
  NUM Sin[TER]
where candidates are 
  [0] NUM Sin[NUM]
Use Help["Sin"] for more information. 

$TEST #66
-------------- PARSING TARGET --------------
  @raw : Sin[2]3
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: MUL
      @pos: None

    [5] NUM
      @val: 3
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] NUM
      @val: 3
      @pos: 6

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2] * 3
    @postfix: 2 Sin 3 *
    @prefix : * 2 Sin 3

------------ INTERPRETING TARGET -----------
  @infix : Sin[2] * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.727892280477045

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.727892280477045

$TEST #67
-------------- PARSING TARGET --------------
  @raw : Sin[2]Cos[2]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: MUL
      @pos: None

    [5] FUN
      @val: COS
      @pos: 6

    [6] DELIM
      @val: START
      @pos: 9

    [7] NUM
      @val: 2
      @pos: 10

    [8] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] NUM
      @val: 2
      @pos: 10

    [3] FUN
      @val: COS
      @pos: 6

    [4] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2] * Cos[2]
    @postfix: 2 Sin 2 Cos *
    @prefix : * 2 Sin 2 Cos

------------ INTERPRETING TARGET -----------
  @infix : Sin[2] * Cos[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.37840124765396416

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.37840124765396416

$TEST #68
-------------- PARSING TARGET --------------
  @raw : Sin[2]Help[]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: MUL
      @pos: None

    [5] CMD
      @val: HELP
      @pos: 6

    [6] DELIM
      @val: START
      @pos: 10

    [7] VOID
      @val: None
      @pos: None

    [8] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] CMD
      @val: HELP
      @pos: 6

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2] * Help[]
    @postfix: 2 Sin Help *
    @prefix : * 2 Sin Help

------------ INTERPRETING TARGET -----------
  @infix : Sin[2] * Help[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Sin[2]Help[]
~~~~~~^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #69
-------------- PARSING TARGET --------------
  @raw : Log[2, Sin[2]]
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] FUN
      @val: SIN
      @pos: 7

    [5] DELIM
      @val: START
      @pos: 10

    [6] NUM
      @val: 2
      @pos: 11

    [7] DELIM
      @val: END
      @pos: 12

    [8] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 2
      @pos: 11

    [2] FUN
      @val: SIN
      @pos: 7

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, Sin[2]]
    @postfix: 2 2 Sin Log
    @prefix : Log 2 Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Log[2, Sin[2]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 0.9092974268256817]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 0.9092974268256817]

$TEST #70
-------------- PARSING TARGET --------------
  @raw : Log[2, x]
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] VAR
      @val: x
      @pos: 7

    [5] DELIM
      @val: END
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] VAR
      @val: x
      @pos: 7

    [2] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, x]
    @postfix: 2 x Log
    @prefix : Log 2 x

------------ INTERPRETING TARGET -----------
  @infix : Log[2, x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, x]

$TEST #71
-------------- PARSING TARGET --------------
  @raw : Log[2, Help[]]
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] CMD
      @val: HELP
      @pos: 7

    [5] DELIM
      @val: START
      @pos: 11

    [6] VOID
      @val: None
      @pos: None

    [7] DELIM
      @val: END
      @pos: 12

    [8] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] CMD
      @val: HELP
      @pos: 7

    [2] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, Help[]]
    @postfix: 2 Help Log
    @prefix : Log 2 Help 

[System] [1;31mERROR[0m: Timeout.
Interpreting chain is timed out its limit 3sec after 1000 iteration. Use Set_sys_var["Computation_Timeout", sec] to customize timeout limit. 

$TEST #72
-------------- PARSING TARGET --------------
  @raw : Sin 2       
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin 2       
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #73
-------------- PARSING TARGET --------------
  @raw : Sin x       
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin x       
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #74
-------------- PARSING TARGET --------------
  @raw : Sin Cos     
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin Cos     
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #75
-------------- PARSING TARGET --------------
  @raw : Sin Help    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin Help    
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #76
-------------- PARSING TARGET --------------
  @raw : Help 2      
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help 2      
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #77
-------------- PARSING TARGET --------------
  @raw : Help 2      
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help 2      
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #78
-------------- PARSING TARGET --------------
  @raw : Help Sin    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help Sin    
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #79
-------------- PARSING TARGET --------------
  @raw : Help Quit   
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help Quit   
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #80
-------------- PARSING TARGET --------------
  @raw : Help["Sin"2]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"2]
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #81
-------------- PARSING TARGET --------------
  @raw : Help["Sin"x]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"x]
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #82
-------------- PARSING TARGET --------------
  @raw : Help["Sin"Cos[2]]
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"Cos[2]]
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #83
-------------- PARSING TARGET --------------
  @raw : Help["Sin"Help[]]
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"Help[]]
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #84
-------------- PARSING TARGET --------------
  @raw : 2 * / 3     
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 * / 3     
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens * and / cannot adjacent to each other.                  

$TEST #85
-------------- PARSING TARGET --------------
  @raw : 2 ** 3
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: POW
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^3
    @postfix: 2 3 ^
    @prefix : ^ 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2^3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 8

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

8

$TEST #86
-------------- PARSING TARGET --------------
  @raw : 2 * * 3     
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 * * 3     
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens * and * cannot adjacent to each other.                  

$TEST #87
-------------- PARSING TARGET --------------
  @raw : 2 ** ** 3   
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 ** ** 3   
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens ** and ** cannot adjacent to each other.                  

$TEST #88
-------------- PARSING TARGET --------------
  @raw : 2 * ** 3    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 * ** 3    
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens * and ** cannot adjacent to each other.                  

$TEST #89
-------------- PARSING TARGET --------------
  @raw : 2 ** * 3    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 ** * 3    
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens ** and * cannot adjacent to each other.                  

$TEST #90
-------------- PARSING TARGET --------------
  @raw : 2 *** 3 
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2 *** 3 
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens ** and * cannot adjacent to each other.                  

$TEST #91
-------------- PARSING TARGET --------------
  @raw : (2) / 3
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: RPAR
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: DIV
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / 3
    @postfix: 2 3 /
    @prefix : / 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 / 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.6666666666666666

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.6666666666666666

$TEST #92
-------------- PARSING TARGET --------------
  @raw : 2! / 3
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : 2! / 3
    @postfix: 2 ! 3 /
    @prefix : / 2 ! 3

------------ INTERPRETING TARGET -----------
  @infix : 2! / 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.6666666666666666

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.6666666666666666

$TEST #93
-------------- PARSING TARGET --------------
  @raw : (2)(3)
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: RPAR
      @pos: 2

    [3] OP
      @val: MUL
      @pos: None

    [4] OP
      @val: LPAR
      @pos: 3

    [5] NUM
      @val: 3
      @pos: 4

    [6] OP
      @val: RPAR
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3
    @postfix: 2 3 *
    @prefix : * 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #94
-------------- PARSING TARGET --------------
  @raw : 2 * +3
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: PLUS
      @pos: 4

    [3] NUM
      @val: 3
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: PLUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * +3
    @postfix: 2 3 + *
    @prefix : * 2 3 +

------------ INTERPRETING TARGET -----------
  @infix : 2 * +3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #95
-------------- PARSING TARGET --------------
  @raw : 2 * -3
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 3
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * -3
    @postfix: 2 3 - *
    @prefix : * 2 3 -

------------ INTERPRETING TARGET -----------
  @infix : 2 * -3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-6

$TEST #96
-------------- PARSING TARGET --------------
  @raw : 2!(3)
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] OP
      @val: MUL
      @pos: None

    [3] OP
      @val: LPAR
      @pos: 2

    [4] NUM
      @val: 3
      @pos: 3

    [5] OP
      @val: RPAR
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 3

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : 2! * 3
    @postfix: 2 ! 3 *
    @prefix : * 2 ! 3

------------ INTERPRETING TARGET -----------
  @infix : 2! * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

6

$TEST #97
-------------- PARSING TARGET --------------
  @raw : 2 + (3)
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3
    @postfix: 2 3 +
    @prefix : + 2 3

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

5

$TEST #98
-------------- PARSING TARGET --------------
  @raw : 2 +-+--3
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 3

    [3] OP
      @val: PLUS
      @pos: 4

    [4] OP
      @val: MINUS
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 6

    [6] NUM
      @val: 3
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 7

    [2] OP
      @val: MINUS
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: PLUS
      @pos: 4

    [5] OP
      @val: MINUS
      @pos: 3

    [6] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + -+--3
    @postfix: 2 3 - - + - +
    @prefix : + 2 3 - - + -

------------ INTERPRETING TARGET -----------
  @infix : 2 + -+--3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-1

$TEST #99
-------------- PARSING TARGET --------------
  @raw : (((())))    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

(((())))    
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two operator tokens ( and ) cannot adjacent to each other.                  

$TEST #100
-------------- PARSING TARGET --------------
  @raw : Sin[+2]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: PLUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] OP
      @val: PLUS
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[+2]
    @postfix: 2 + Sin
    @prefix : Sin + 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[+2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #101
-------------- PARSING TARGET --------------
  @raw : Sin[-2]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[-2]
    @postfix: 2 - Sin
    @prefix : Sin - 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[-2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.9092974268256817

$TEST #102
-------------- PARSING TARGET --------------
  @raw : Sin[(2)]
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] DELIM
      @val: END
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]
    @postfix: 2 Sin
    @prefix : Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #103
-------------- PARSING TARGET --------------
  @raw : Sin[*2]         
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[*2]         
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These delimiter and operator token [ and * cannot adjacent to each other.         

$TEST #104
-------------- PARSING TARGET --------------
  @raw : Sin[**2]        
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[**2]        
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These delimiter and operator token [ and ** cannot adjacent to each other.         

$TEST #105
-------------- PARSING TARGET --------------
  @raw : Log[2, -1024]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] OP
      @val: MINUS
      @pos: 7

    [5] NUM
      @val: 1024
      @pos: 8

    [6] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 1024
      @pos: 8

    [2] OP
      @val: MINUS
      @pos: 7

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, -1024]
    @postfix: 2 1024 - Log
    @prefix : Log 2 - 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2, -1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, -1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, -1024]

$TEST #106
-------------- PARSING TARGET --------------
  @raw : Log[2, +1024]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] OP
      @val: PLUS
      @pos: 7

    [5] NUM
      @val: 1024
      @pos: 8

    [6] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 1024
      @pos: 8

    [2] OP
      @val: PLUS
      @pos: 7

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, +1024]
    @postfix: 2 1024 + Log
    @prefix : Log 2 + 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2, +1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 1024]

$TEST #107
-------------- PARSING TARGET --------------
  @raw : Log[2, (1024)]
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] OP
      @val: LPAR
      @pos: 7

    [5] NUM
      @val: 1024
      @pos: 8

    [6] OP
      @val: RPAR
      @pos: 12

    [7] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 1024
      @pos: 8

    [2] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, 1024]
    @postfix: 2 1024 Log
    @prefix : Log 2 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2, 1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 1024]

$TEST #108
-------------- PARSING TARGET --------------
  @raw : Log[2, *1024]   
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2, *1024]   
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These delimiter and operator token , and * cannot adjacent to each other.         

$TEST #109
-------------- PARSING TARGET --------------
  @raw : Sin[2] + 2
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 2
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] NUM
      @val: 2
      @pos: 9

    [3] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2] + 2
    @postfix: 2 Sin 2 +
    @prefix : + 2 Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2] + 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.909297426825682

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.909297426825682

$TEST #110
-------------- PARSING TARGET --------------
  @raw : Sin[2]!
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: FACT
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] OP
      @val: FACT
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]!
    @postfix: 2 Sin !
    @prefix : ! 2 Sin

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9649847256950728

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9649847256950728

$TEST #111
-------------- PARSING TARGET --------------
  @raw : (Sin[2])
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] FUN
      @val: SIN
      @pos: 1

    [2] DELIM
      @val: START
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] FUN
      @val: SIN
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]
    @postfix: 2 Sin
    @prefix : Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #112
-------------- PARSING TARGET --------------
  @raw : Sin[2](3)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: MUL
      @pos: None

    [5] OP
      @val: LPAR
      @pos: 6

    [6] NUM
      @val: 3
      @pos: 7

    [7] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

    [2] NUM
      @val: 3
      @pos: 7

    [3] OP
      @val: MUL
      @pos: None

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2] * 3
    @postfix: 2 Sin 3 *
    @prefix : * 2 Sin 3

------------ INTERPRETING TARGET -----------
  @infix : Sin[2] * 3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.727892280477045

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.727892280477045

$TEST #113
-------------- PARSING TARGET --------------
  @raw : Help["Sin" + 2] 
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin" + 2] 
~~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
String token must be followed by delimiter token , or ].                            

$TEST #114
-------------- PARSING TARGET --------------
  @raw : Sin + 2         
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin + 2         
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #115
-------------- PARSING TARGET --------------
  @raw : Quit + 2        
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Quit + 2        
~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #116
-------------- PARSING TARGET --------------
  @raw : 2[3]            
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

2[3]            
~^
[Parser] [1;31mERROR[0m: Invalid expression.
Only function or command token can be followed by delimiter token [.                

$TEST #117
-------------- PARSING TARGET --------------
  @raw : x[2]            
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

x[2]            
~^
[Parser] [1;31mERROR[0m: Invalid expression.
Only function or command token can be followed by delimiter token [.                

$TEST #118
-------------- PARSING TARGET --------------
  @raw : Help["Sin"[2]]  
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin"[2]]  
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Only function or command token can be followed by delimiter token [.                

$TEST #119
-------------- PARSING TARGET --------------
  @raw : Sin[2!]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: FACT
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] OP
      @val: FACT
      @pos: 5

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2!]
    @postfix: 2 ! Sin
    @prefix : Sin ! 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2!]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #120
-------------- PARSING TARGET --------------
  @raw : Log[2!, 1024]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: FACT
      @pos: 5

    [4] DELIM
      @val: CONT
      @pos: 6

    [5] NUM
      @val: 1024
      @pos: 8

    [6] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] OP
      @val: FACT
      @pos: 5

    [2] NUM
      @val: 1024
      @pos: 8

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2!, 1024]
    @postfix: 2 ! 1024 Log
    @prefix : Log ! 2 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2!, 1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 1024]

$TEST #121
-------------- PARSING TARGET --------------
  @raw : Log[2^, 1024]   
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2^, 1024]   
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These operator and delimiter token ^ and , cannot adjacent to each other.         

$TEST #122
-------------- PARSING TARGET --------------
  @raw : Log[2**, 1024]  
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2**, 1024]  
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These operator and delimiter token ** and , cannot adjacent to each other.         

$TEST #123
-------------- PARSING TARGET --------------
  @raw : Log[(2), 1024]
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] DELIM
      @val: CONT
      @pos: 7

    [6] NUM
      @val: 1024
      @pos: 9

    [7] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 1024
      @pos: 9

    [2] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, 1024]
    @postfix: 2 1024 Log
    @prefix : Log 2 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[2, 1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 1024]

$TEST #124
-------------- PARSING TARGET --------------
  @raw : Sin[2+]         
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[2+]         
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These operator and delimiter token + and ] cannot adjacent to each other.         

$TEST #125
-------------- PARSING TARGET --------------
  @raw : Sin[2+[2]]      
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[2+[2]]      
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These operator and delimiter token + and [ cannot adjacent to each other.         

$TEST #126
-------------- PARSING TARGET --------------
  @raw : Sin[2![2]]      
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[2![2]]      
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These operator and delimiter token ! and [ cannot adjacent to each other.         

$TEST #127
-------------- PARSING TARGET --------------
  @raw : Log[, 1024]         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[, 1024]         
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens [ and , cannot adjacent to each other.                 

$TEST #128
-------------- PARSING TARGET --------------
  @raw : Sin[[2]]            
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[[2]]            
~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens [ and [ cannot adjacent to each other.                 

$TEST #129
-------------- PARSING TARGET --------------
  @raw : Log[2, [1024]]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2, [1024]]      
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens , and [ cannot adjacent to each other.                 

$TEST #130
-------------- PARSING TARGET --------------
  @raw : Log[2,]             
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2,]             
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens , and ] cannot adjacent to each other.                 

$TEST #131
-------------- PARSING TARGET --------------
  @raw : Log[2,,]            
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[2,,]            
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens , and , cannot adjacent to each other.                 

$TEST #132
-------------- PARSING TARGET --------------
  @raw : Log[Sin[2], 1024]
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] FUN
      @val: SIN
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 7

    [4] NUM
      @val: 2
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

    [6] DELIM
      @val: CONT
      @pos: 10

    [7] NUM
      @val: 1024
      @pos: 12

    [8] DELIM
      @val: END
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 8

    [1] FUN
      @val: SIN
      @pos: 4

    [2] NUM
      @val: 1024
      @pos: 12

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[Sin[2], 1024]
    @postfix: 2 Sin 1024 Log
    @prefix : Log Sin 2 1024

------------ INTERPRETING TARGET -----------
  @infix : Log[Sin[2], 1024]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[0.9092974268256817, 1024]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[0.9092974268256817, 1024]

$TEST #133
-------------- PARSING TARGET --------------
  @raw : Sin[Sin[2][2]]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[Sin[2][2]]      
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
These two delimiter tokens ] and [ cannot adjacent to each other.                 

$TEST #134
-------------- PARSING TARGET --------------
  @raw : Sin[Cos]            
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Sin[Cos]            
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #135
-------------- PARSING TARGET --------------
  @raw : Log[Cos, 1024]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Log[Cos, 1024]      
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #136
-------------- PARSING TARGET --------------
  @raw : Log[2, Sin[3]]
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] FUN
      @val: SIN
      @pos: 7

    [5] DELIM
      @val: START
      @pos: 10

    [6] NUM
      @val: 3
      @pos: 11

    [7] DELIM
      @val: END
      @pos: 12

    [8] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 3
      @pos: 11

    [2] FUN
      @val: SIN
      @pos: 7

    [3] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2, Sin[3]]
    @postfix: 2 3 Sin Log
    @prefix : Log 2 Sin 3

------------ INTERPRETING TARGET -----------
  @infix : Log[2, Sin[3]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[2, 0.1411200080598672]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[2, 0.1411200080598672]

$TEST #137
-------------- PARSING TARGET --------------
  @raw : Help[Quit]          
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[Quit]          
~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #138
-------------- PARSING TARGET --------------
  @raw : Help[Quit, "Sin"]   
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[Quit, "Sin"]   
~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #139
-------------- PARSING TARGET --------------
  @raw : Help["Sin", Quit]   
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin", Quit]   
~~~~~~~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Function and command token must be followed by delimiter token [.                   

$TEST #140
-------------- PARSING TARGET --------------
  @raw : Help[2"Sin"]        
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[2"Sin"]        
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #141
-------------- PARSING TARGET --------------
  @raw : Help[x"Sin"]        
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[x"Sin"]        
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #142
-------------- PARSING TARGET --------------
  @raw : Help[2 + "Sin"]     
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[2 + "Sin"]     
~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #143
-------------- PARSING TARGET --------------
  @raw : Help[2!"Sin"]       
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[2!"Sin"]       
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #144
-------------- PARSING TARGET --------------
  @raw : Help[("Sin")]       
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[("Sin")]       
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #145
-------------- PARSING TARGET --------------
  @raw : Help[Sin"Sin"]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[Sin"Sin"]      
~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #146
-------------- PARSING TARGET --------------
  @raw : Help[Quit"Sin"]     
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[Quit"Sin"]     
~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #147
-------------- PARSING TARGET --------------
  @raw : Help["Sin""Sin"]    
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help["Sin""Sin"]    
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #148
-------------- PARSING TARGET --------------
  @raw : Help[]"Sin"         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[]"Sin"         
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
For string token, there must be preceding [ or , delimiter token.                   

$TEST #149
-------------- PARSING TARGET --------------
  @raw : 2 * 3 / 4 % 5
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 4
      @pos: 8

    [5] OP
      @val: REM
      @pos: 10

    [6] NUM
      @val: 5
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 4
      @pos: 8

    [4] OP
      @val: DIV
      @pos: 6

    [5] NUM
      @val: 5
      @pos: 12

    [6] OP
      @val: REM
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3 / 4 % 5
    @postfix: 2 3 * 4 / 5 %
    @prefix : % 2 3 * 4 / 5

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3 / 4 % 5

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1.5

$TEST #150
-------------- PARSING TARGET --------------
  @raw : 2 + 3 * 4
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 4
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] NUM
      @val: 4
      @pos: 8

    [3] OP
      @val: MUL
      @pos: 6

    [4] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3 * 4
    @postfix: 2 3 4 * +
    @prefix : + 2 3 4 *

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3 * 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 14

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

14

$TEST #151
-------------- PARSING TARGET --------------
  @raw : (2 + 3) * 4
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] NUM
      @val: 4
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 4
      @pos: 10

    [4] OP
      @val: MUL
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : (2 + 3) * 4
    @postfix: 2 3 + 4 *
    @prefix : * 2 3 + 4

------------ INTERPRETING TARGET -----------
  @infix : (2 + 3) * 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 20

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

20

$TEST #152
-------------- PARSING TARGET --------------
  @raw : 2 * (3 + 4)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 4
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 5

    [2] NUM
      @val: 4
      @pos: 9

    [3] OP
      @val: ADD
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * (3 + 4)
    @postfix: 2 3 4 + *
    @prefix : * 2 3 4 +

------------ INTERPRETING TARGET -----------
  @infix : 2 * (3 + 4)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 14

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

14

$TEST #153
-------------- PARSING TARGET --------------
  @raw : (2 + 3) * (4 + 5)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] NUM
      @val: 4
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 13

    [9] NUM
      @val: 5
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 4
      @pos: 11

    [4] NUM
      @val: 5
      @pos: 15

    [5] OP
      @val: ADD
      @pos: 13

    [6] OP
      @val: MUL
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : (2 + 3) * (4 + 5)
    @postfix: 2 3 + 4 5 + *
    @prefix : * 2 3 + 4 5 +

------------ INTERPRETING TARGET -----------
  @infix : (2 + 3) * (4 + 5)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 45

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

45

$TEST #154
-------------- PARSING TARGET --------------
  @raw : (2 + 3) + 4 * (5 - 6)^7 / 8 % +9 ** -10
  @size: 39 chars (88 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] NUM
      @val: 4
      @pos: 10

    [7] OP
      @val: MUL
      @pos: 12

    [8] OP
      @val: LPAR
      @pos: 14

    [9] NUM
      @val: 5
      @pos: 15

    [10] OP
      @val: SUB
      @pos: 17

    [11] NUM
      @val: 6
      @pos: 19

    [12] OP
      @val: RPAR
      @pos: 20

    [13] OP
      @val: POW
      @pos: 21

    [14] NUM
      @val: 7
      @pos: 22

    [15] OP
      @val: DIV
      @pos: 24

    [16] NUM
      @val: 8
      @pos: 26

    [17] OP
      @val: REM
      @pos: 28

    [18] OP
      @val: PLUS
      @pos: 30

    [19] NUM
      @val: 9
      @pos: 31

    [20] OP
      @val: POW
      @pos: 33

    [21] OP
      @val: MINUS
      @pos: 36

    [22] NUM
      @val: 10
      @pos: 37

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 4
      @pos: 10

    [4] NUM
      @val: 5
      @pos: 15

    [5] NUM
      @val: 6
      @pos: 19

    [6] OP
      @val: SUB
      @pos: 17

    [7] NUM
      @val: 7
      @pos: 22

    [8] OP
      @val: POW
      @pos: 21

    [9] OP
      @val: MUL
      @pos: 12

    [10] NUM
      @val: 8
      @pos: 26

    [11] OP
      @val: DIV
      @pos: 24

    [12] NUM
      @val: 9
      @pos: 31

    [13] OP
      @val: PLUS
      @pos: 30

    [14] NUM
      @val: 10
      @pos: 37

    [15] OP
      @val: MINUS
      @pos: 36

    [16] OP
      @val: POW
      @pos: 33

    [17] OP
      @val: REM
      @pos: 28

    [18] OP
      @val: ADD
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3 + 4 * (5 - 6)^7 / 8 % +9^-10
    @postfix: 2 3 + 4 5 6 - 7 ^ * 8 / 9 + 10 - ^ % +
    @prefix : + 2 3 + 4 5 6 - 7 ^ * 8 / 9 + 10 - ^ %

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3 + 4 * (5 - 6)^7 / 8 % +9^-10

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 5.000000000143398

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

5.000000000143398

$TEST #155
-------------- PARSING TARGET --------------
  @raw : (((2) + 3) * (4 - (5 % 7)))
  @size: 27 chars (76 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] NUM
      @val: 2
      @pos: 3

    [4] OP
      @val: RPAR
      @pos: 4

    [5] OP
      @val: ADD
      @pos: 6

    [6] NUM
      @val: 3
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

    [8] OP
      @val: MUL
      @pos: 11

    [9] OP
      @val: LPAR
      @pos: 13

    [10] NUM
      @val: 4
      @pos: 14

    [11] OP
      @val: SUB
      @pos: 16

    [12] OP
      @val: LPAR
      @pos: 18

    [13] NUM
      @val: 5
      @pos: 19

    [14] OP
      @val: REM
      @pos: 21

    [15] NUM
      @val: 7
      @pos: 23

    [16] OP
      @val: RPAR
      @pos: 24

    [17] OP
      @val: RPAR
      @pos: 25

    [18] OP
      @val: RPAR
      @pos: 26

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 3

    [1] NUM
      @val: 3
      @pos: 8

    [2] OP
      @val: ADD
      @pos: 6

    [3] NUM
      @val: 4
      @pos: 14

    [4] NUM
      @val: 5
      @pos: 19

    [5] NUM
      @val: 7
      @pos: 23

    [6] OP
      @val: REM
      @pos: 21

    [7] OP
      @val: SUB
      @pos: 16

    [8] OP
      @val: MUL
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : (2 + 3) * (4 - 5 % 7)
    @postfix: 2 3 + 4 5 7 % - *
    @prefix : * 2 3 + 4 5 7 % -

------------ INTERPRETING TARGET -----------
  @infix : (2 + 3) * (4 - 5 % 7)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-5

$TEST #156
-------------- PARSING TARGET --------------
  @raw : (2 - (3 + 4 * 5^6) + 7)
  @size: 23 chars (72 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: SUB
      @pos: 3

    [3] OP
      @val: LPAR
      @pos: 5

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] NUM
      @val: 4
      @pos: 10

    [7] OP
      @val: MUL
      @pos: 12

    [8] NUM
      @val: 5
      @pos: 14

    [9] OP
      @val: POW
      @pos: 15

    [10] NUM
      @val: 6
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

    [12] OP
      @val: ADD
      @pos: 19

    [13] NUM
      @val: 7
      @pos: 21

    [14] OP
      @val: RPAR
      @pos: 22

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 6

    [2] NUM
      @val: 4
      @pos: 10

    [3] NUM
      @val: 5
      @pos: 14

    [4] NUM
      @val: 6
      @pos: 16

    [5] OP
      @val: POW
      @pos: 15

    [6] OP
      @val: MUL
      @pos: 12

    [7] OP
      @val: ADD
      @pos: 8

    [8] OP
      @val: SUB
      @pos: 3

    [9] NUM
      @val: 7
      @pos: 21

    [10] OP
      @val: ADD
      @pos: 19

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 - (3 + 4 * 5^6) + 7
    @postfix: 2 3 4 5 6 ^ * + - 7 +
    @prefix : + 2 3 4 5 6 ^ * + - 7

------------ INTERPRETING TARGET -----------
  @infix : 2 - (3 + 4 * 5^6) + 7

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -62494

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-62494

$TEST #157
-------------- PARSING TARGET --------------
  @raw : (2 - (3^4 * 5 + 6) + 7)
  @size: 23 chars (72 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: SUB
      @pos: 3

    [3] OP
      @val: LPAR
      @pos: 5

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: POW
      @pos: 7

    [6] NUM
      @val: 4
      @pos: 8

    [7] OP
      @val: MUL
      @pos: 10

    [8] NUM
      @val: 5
      @pos: 12

    [9] OP
      @val: ADD
      @pos: 14

    [10] NUM
      @val: 6
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

    [12] OP
      @val: ADD
      @pos: 19

    [13] NUM
      @val: 7
      @pos: 21

    [14] OP
      @val: RPAR
      @pos: 22

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 3
      @pos: 6

    [2] NUM
      @val: 4
      @pos: 8

    [3] OP
      @val: POW
      @pos: 7

    [4] NUM
      @val: 5
      @pos: 12

    [5] OP
      @val: MUL
      @pos: 10

    [6] NUM
      @val: 6
      @pos: 16

    [7] OP
      @val: ADD
      @pos: 14

    [8] OP
      @val: SUB
      @pos: 3

    [9] NUM
      @val: 7
      @pos: 21

    [10] OP
      @val: ADD
      @pos: 19

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 - (3^4 * 5 + 6) + 7
    @postfix: 2 3 4 ^ 5 * 6 + - 7 +
    @prefix : + 2 3 4 ^ 5 * 6 + - 7

------------ INTERPRETING TARGET -----------
  @infix : 2 - (3^4 * 5 + 6) + 7

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -402

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-402

$TEST #158
-------------- PARSING TARGET --------------
  @raw : 2 - 3 - 4
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

    [3] OP
      @val: SUB
      @pos: 6

    [4] NUM
      @val: 4
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: SUB
      @pos: 2

    [3] NUM
      @val: 4
      @pos: 8

    [4] OP
      @val: SUB
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 - 3 - 4
    @postfix: 2 3 - 4 -
    @prefix : - 2 3 - 4

------------ INTERPRETING TARGET -----------
  @infix : 2 - 3 - 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-5

$TEST #159
-------------- PARSING TARGET --------------
  @raw : 2^3^4
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 2

    [3] OP
      @val: POW
      @pos: 3

    [4] NUM
      @val: 4
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 2

    [2] NUM
      @val: 4
      @pos: 4

    [3] OP
      @val: POW
      @pos: 3

    [4] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^3^4
    @postfix: 2 3 4 ^ ^
    @prefix : ^ 2 3 4 ^

------------ INTERPRETING TARGET -----------
  @infix : 2^3^4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2417851639229258349412352

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2417851639229258349412352

$TEST #160
-------------- PARSING TARGET --------------
  @raw : ((((2))))
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] OP
      @val: LPAR
      @pos: 3

    [4] NUM
      @val: 2
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

    [6] OP
      @val: RPAR
      @pos: 6

    [7] OP
      @val: RPAR
      @pos: 7

    [8] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : 2
    @postfix: 2
    @prefix : 2

------------ INTERPRETING TARGET -----------
  @infix : 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #161
-------------- PARSING TARGET --------------
  @raw : ((((2)))            
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] OP
      @val: LPAR
      @pos: 3

    [4] NUM
      @val: 2
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

    [6] OP
      @val: RPAR
      @pos: 6

    [7] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;31mfail[0m

((((2)))            
^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #162
-------------- PARSING TARGET --------------
  @raw : (((2))))            
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] NUM
      @val: 2
      @pos: 3

    [4] OP
      @val: RPAR
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

    [6] OP
      @val: RPAR
      @pos: 6

    [7] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;31mfail[0m

(((2))))            
~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #163
-------------- PARSING TARGET --------------
  @raw : (2 + (3 + (4 + 5))  
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] OP
      @val: LPAR
      @pos: 5

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] NUM
      @val: 4
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 13

    [9] NUM
      @val: 5
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

  Running infix to postfix converter... [1;31mfail[0m

(2 + (3 + (4 + 5))  
^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #164
-------------- PARSING TARGET --------------
  @raw : 2 + (3 + (4 + 5)))  
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 3
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: LPAR
      @pos: 9

    [6] NUM
      @val: 4
      @pos: 10

    [7] OP
      @val: ADD
      @pos: 12

    [8] NUM
      @val: 5
      @pos: 14

    [9] OP
      @val: RPAR
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

  Running infix to postfix converter... [1;31mfail[0m

2 + (3 + (4 + 5)))  
~~~~~~~~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #165
-------------- PARSING TARGET --------------
  @raw : Sin[(2 - (3^4 * 5 + 6) + 7)]
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: SUB
      @pos: 7

    [5] OP
      @val: LPAR
      @pos: 9

    [6] NUM
      @val: 3
      @pos: 10

    [7] OP
      @val: POW
      @pos: 11

    [8] NUM
      @val: 4
      @pos: 12

    [9] OP
      @val: MUL
      @pos: 14

    [10] NUM
      @val: 5
      @pos: 16

    [11] OP
      @val: ADD
      @pos: 18

    [12] NUM
      @val: 6
      @pos: 20

    [13] OP
      @val: RPAR
      @pos: 21

    [14] OP
      @val: ADD
      @pos: 23

    [15] NUM
      @val: 7
      @pos: 25

    [16] OP
      @val: RPAR
      @pos: 26

    [17] DELIM
      @val: END
      @pos: 27

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 3
      @pos: 10

    [2] NUM
      @val: 4
      @pos: 12

    [3] OP
      @val: POW
      @pos: 11

    [4] NUM
      @val: 5
      @pos: 16

    [5] OP
      @val: MUL
      @pos: 14

    [6] NUM
      @val: 6
      @pos: 20

    [7] OP
      @val: ADD
      @pos: 18

    [8] OP
      @val: SUB
      @pos: 7

    [9] NUM
      @val: 7
      @pos: 25

    [10] OP
      @val: ADD
      @pos: 23

    [11] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2 - (3^4 * 5 + 6) + 7]
    @postfix: 2 3 4 ^ 5 * 6 + - 7 + Sin
    @prefix : Sin + 2 3 4 ^ 5 * 6 + - 7

------------ INTERPRETING TARGET -----------
  @infix : Sin[2 - (3^4 * 5 + 6) + 7]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.12354320937804643

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.12354320937804643

$TEST #166
-------------- PARSING TARGET --------------
  @raw : Log[2 * 3, 4 + 5]
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] DELIM
      @val: CONT
      @pos: 9

    [6] NUM
      @val: 4
      @pos: 11

    [7] OP
      @val: ADD
      @pos: 13

    [8] NUM
      @val: 5
      @pos: 15

    [9] DELIM
      @val: END
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 3
      @pos: 8

    [2] OP
      @val: MUL
      @pos: 6

    [3] NUM
      @val: 4
      @pos: 11

    [4] NUM
      @val: 5
      @pos: 15

    [5] OP
      @val: ADD
      @pos: 13

    [6] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2 * 3, 4 + 5]
    @postfix: 2 3 * 4 5 + Log
    @prefix : Log * 2 3 + 4 5

------------ INTERPRETING TARGET -----------
  @infix : Log[2 * 3, 4 + 5]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[6, 9]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[6, 9]

$TEST #167
-------------- PARSING TARGET --------------
  @raw : Log[2 + 3, 4 * 5]
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] DELIM
      @val: CONT
      @pos: 9

    [6] NUM
      @val: 4
      @pos: 11

    [7] OP
      @val: MUL
      @pos: 13

    [8] NUM
      @val: 5
      @pos: 15

    [9] DELIM
      @val: END
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 3
      @pos: 8

    [2] OP
      @val: ADD
      @pos: 6

    [3] NUM
      @val: 4
      @pos: 11

    [4] NUM
      @val: 5
      @pos: 15

    [5] OP
      @val: MUL
      @pos: 13

    [6] FUN
      @val: LOG
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Log[2 + 3, 4 * 5]
    @postfix: 2 3 + 4 5 * Log
    @prefix : Log + 2 3 * 4 5

------------ INTERPRETING TARGET -----------
  @infix : Log[2 + 3, 4 * 5]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: None

  Running simplifier................... [1;36mdone[0m
    @simplified: Log[5, 20]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Log[5, 20]

$TEST #168
-------------- PARSING TARGET --------------
  @raw : Sin[(2 + 3])        
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 3
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;31mfail[0m

Sin[(2 + 3])        
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #169
-------------- PARSING TARGET --------------
  @raw : (Sin[2 + 3)]        
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] FUN
      @val: SIN
      @pos: 1

    [2] DELIM
      @val: START
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 3
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

    [7] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;31mfail[0m

(Sin[2 + 3)]        
~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #170
-------------- PARSING TARGET --------------
  @raw : Sin[(2 + 3)]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 3
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

    [7] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 3
      @pos: 9

    [2] OP
      @val: ADD
      @pos: 7

    [3] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2 + 3]
    @postfix: 2 3 + Sin
    @prefix : Sin + 2 3

------------ INTERPRETING TARGET -----------
  @infix : Sin[2 + 3]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.9589242746631385

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.9589242746631385

$TEST #171
-------------- PARSING TARGET --------------
  @raw : (Sin[2 + 3])
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] FUN
      @val: SIN
      @pos: 1

    [2] DELIM
      @val: START
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 3
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 3
      @pos: 9

    [2] OP
      @val: ADD
      @pos: 7

    [3] FUN
      @val: SIN
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2 + 3]
    @postfix: 2 3 + Sin
    @prefix : Sin + 2 3

------------ INTERPRETING TARGET -----------
  @infix : Sin[2 + 3]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.9589242746631385

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.9589242746631385

$TEST #172
-------------- PARSING TARGET --------------
  @raw : (Log[2), 1024]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] FUN
      @val: LOG
      @pos: 1

    [2] DELIM
      @val: START
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] DELIM
      @val: CONT
      @pos: 7

    [6] NUM
      @val: 1024
      @pos: 9

    [7] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;31mfail[0m

(Log[2), 1024]      
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Parenthesis is not matched.                                                         

$TEST #173
-------------- PARSING TARGET --------------
  @raw : Log[(2, 1024)]      
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: LOG
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] DELIM
      @val: CONT
      @pos: 6

    [5] NUM
      @val: 1024
      @pos: 8

    [6] OP
      @val: RPAR
      @pos: 12

    [7] DELIM
      @val: END
      @pos: 13

  Running infix to postfix converter... [1;31mfail[0m

Log[(2, 1024)]      
~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Delimiter token , is misplaced.                                                     

$TEST #174
-------------- PARSING TARGET --------------
  @raw : (2, 3)              
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] DELIM
      @val: CONT
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 4

    [4] OP
      @val: RPAR
      @pos: 5

  Running infix to postfix converter... [1;31mfail[0m

(2, 3)              
~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Delimiter token , is misplaced.                                                     

$TEST #175
-------------- PARSING TARGET --------------
  @raw : 2 + Help[]          
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] CMD
      @val: HELP
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] CMD
      @val: HELP
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + Help[]
    @postfix: 2 Help +
    @prefix : + 2 Help

------------ INTERPRETING TARGET -----------
  @infix : 2 + Help[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

2 + Help[]          
~~~~^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #176
-------------- PARSING TARGET --------------
  @raw : Help[] + 2          
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] VOID
      @val: None
      @pos: None

    [3] DELIM
      @val: END
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] NUM
      @val: 2
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 9

    [2] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : Help[] + 2
    @postfix: Help 2 +
    @prefix : + Help 2

------------ INTERPRETING TARGET -----------
  @infix : Help[] + 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Help[] + 2          
^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred type is TER but None is expected.                                             

$TEST #177
-------------- PARSING TARGET --------------
  @raw : Help[] + Version[]  
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[] + Version[]  
~~~~~~~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Only function or command token can be followed by delimiter token [.                

$TEST #178
-------------- PARSING TARGET --------------
  @raw : Help[Version[]]     
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;31mfail[0m

Help[Version[]]     
~~~~~~~~~~~~^
[Parser] [1;31mERROR[0m: Invalid expression.
Only function or command token can be followed by delimiter token [.                

$TEST #179
-------------- PARSING TARGET --------------
  @raw : Sin[Help[]]         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] CMD
      @val: HELP
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VOID
      @val: None
      @pos: None

    [5] DELIM
      @val: END
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[Help[]]
    @postfix: Help Sin
    @prefix : Sin Help 

------------ INTERPRETING TARGET -----------
  @infix : Sin[Help[]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Sin[Help[]]         
^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred signature is 
  NUM Sin[TER]
where candidates are 
  [0] NUM Sin[NUM]
Use Help["Sin"] for more information. 

$TEST #180
-------------- PARSING TARGET --------------
  @raw : Help[Sin[2]]        
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] CMD
      @val: HELP
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 5

    [3] DELIM
      @val: START
      @pos: 8

    [4] NUM
      @val: 2
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 9

    [1] FUN
      @val: SIN
      @pos: 5

    [2] CMD
      @val: HELP
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Help[Sin[2]]
    @postfix: 2 Sin Help
    @prefix : Help Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Help[Sin[2]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Help[Sin[2]]        
^
[Interpreter] [1;31mERROR[0m: Signature is not found.
Inferred signature is 
  TER Help[NUM]
where candidates are 
  [0] TER Help[]
  [1] TER Help[STR]
Use Help["Help"] for more information. 

$TEST #181
-------------- PARSING TARGET --------------
  @raw : Sin[2, 3]           
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: CONT
      @pos: 5

    [4] NUM
      @val: 3
      @pos: 7

    [5] DELIM
      @val: END
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 3
      @pos: 7

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2, 3]
    @postfix: 2 3 Sin
    @prefix : Sin 2 3

------------ INTERPRETING TARGET -----------
  @infix : Sin[2, 3]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Sin[2, 3]           
^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred signature is 
  NUM Sin[NUM, NUM]
where candidates are 
  [0] NUM Sin[NUM]
Use Help["Sin"] for more information. 

$TEST #182
-------------- PARSING TARGET --------------
  @raw : Sin[]               
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] VOID
      @val: None
      @pos: None

    [3] DELIM
      @val: END
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[]
    @postfix: Sin
    @prefix : Sin 

------------ INTERPRETING TARGET -----------
  @infix : Sin[]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;31mfail[0m

Sin[]               
^
[Interpreter] [1;31mERROR[0m: Type error.
Inferred signature is 
  NUM Sin[]
where candidates are 
  [0] NUM Sin[NUM]
Use Help["Sin"] for more information. 

$TEST #183
-------------- PARSING TARGET --------------
  @raw : x + y
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y
    @postfix: x y +
    @prefix : + x y

------------ INTERPRETING TARGET -----------
  @infix : x + y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y

$TEST #184
-------------- PARSING TARGET --------------
  @raw : x + (y + z)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] VAR
      @val: z
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] VAR
      @val: z
      @pos: 9

    [3] OP
      @val: ADD
      @pos: 7

    [4] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y + z
    @postfix: x y z + +
    @prefix : + x y z +

------------ INTERPRETING TARGET -----------
  @infix : x + y + z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z

$TEST #185
-------------- PARSING TARGET --------------
  @raw : (x + y) + z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: ADD
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y + z
    @postfix: x y + z +
    @prefix : + x y + z

------------ INTERPRETING TARGET -----------
  @infix : x + y + z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z

$TEST #186
-------------- PARSING TARGET --------------
  @raw : (x + y) + (z + w)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 13

    [9] VAR
      @val: w
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] VAR
      @val: w
      @pos: 15

    [5] OP
      @val: ADD
      @pos: 13

    [6] OP
      @val: ADD
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y + z + w
    @postfix: x y + z w + +
    @prefix : + x y + z w +

------------ INTERPRETING TARGET -----------
  @infix : x + y + z + w

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z + w

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z + w

$TEST #187
-------------- PARSING TARGET --------------
  @raw : x + -(y + z)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] VAR
      @val: z
      @pos: 10

    [3] OP
      @val: ADD
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + -(y + z)
    @postfix: x y z + - +
    @prefix : + x y z + -

------------ INTERPRETING TARGET -----------
  @infix : x + -(y + z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(z + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(z + y)

$TEST #188
-------------- PARSING TARGET --------------
  @raw : -(x + y) + z
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: ADD
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 11

    [5] OP
      @val: ADD
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) + z
    @postfix: x y + - z +
    @prefix : + x y + - z

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) + z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: z + -(y + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

z + -(y + x)

$TEST #189
-------------- PARSING TARGET --------------
  @raw : -(x + y) + -(z + w)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: ADD
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: z
      @pos: 13

    [10] OP
      @val: ADD
      @pos: 15

    [11] VAR
      @val: w
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 13

    [5] VAR
      @val: w
      @pos: 17

    [6] OP
      @val: ADD
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) + -(z + w)
    @postfix: x y + - z w + - +
    @prefix : + x y + - z w + -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) + -(z + w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y + z + w)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y + z + w)

$TEST #190
-------------- PARSING TARGET --------------
  @raw : x + (2 / 0)                 
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 2 / 0
    @postfix: x 2 0 / +
    @prefix : + x 2 0 /

------------ INTERPRETING TARGET -----------
  @infix : x + 2 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of addition. This may cause unexpected behaviors.                                               

x + inf

$TEST #191
-------------- PARSING TARGET --------------
  @raw : x + (-2 / 0)                
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 5

    [4] NUM
      @val: 2
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] NUM
      @val: 0
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 6

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 0
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

    [5] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + -2 / 0
    @postfix: x 2 - 0 / +
    @prefix : + x 2 - 0 /

------------ INTERPRETING TARGET -----------
  @infix : x + -2 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of addition. This may cause unexpected behaviors.                                               

x + -inf

$TEST #192
-------------- PARSING TARGET --------------
  @raw : x + (0 / 0)                 
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 0 / 0
    @postfix: x 0 0 / +
    @prefix : + x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x + 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of addition. This may cause unexpected behaviors.                                               

nan

$TEST #193
-------------- PARSING TARGET --------------
  @raw : x + (2 / 0) + y + (0 / 0)   
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

    [7] OP
      @val: ADD
      @pos: 12

    [8] VAR
      @val: y
      @pos: 14

    [9] OP
      @val: ADD
      @pos: 16

    [10] OP
      @val: LPAR
      @pos: 18

    [11] NUM
      @val: 0
      @pos: 19

    [12] OP
      @val: DIV
      @pos: 21

    [13] NUM
      @val: 0
      @pos: 23

    [14] OP
      @val: RPAR
      @pos: 24

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: ADD
      @pos: 2

    [5] VAR
      @val: y
      @pos: 14

    [6] OP
      @val: ADD
      @pos: 12

    [7] NUM
      @val: 0
      @pos: 19

    [8] NUM
      @val: 0
      @pos: 23

    [9] OP
      @val: DIV
      @pos: 21

    [10] OP
      @val: ADD
      @pos: 16

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 2 / 0 + y + 0 / 0
    @postfix: x 2 0 / + y + 0 0 / +
    @prefix : + x 2 0 / + y + 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x + 2 / 0 + y + 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[2] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of addition. This may cause unexpected behaviors.                                               
[3] [Interpreter] [1;36mWARNING[0m: Nan is detected at 4th operand of addition. This may cause unexpected behaviors.                                               

nan

$TEST #194
-------------- PARSING TARGET --------------
  @raw : 2 + 3 + 4
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] NUM
      @val: 4
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

    [3] NUM
      @val: 4
      @pos: 8

    [4] OP
      @val: ADD
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + 3 + 4
    @postfix: 2 3 + 4 +
    @prefix : + 2 3 + 4

------------ INTERPRETING TARGET -----------
  @infix : 2 + 3 + 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 9

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

9

$TEST #195
-------------- PARSING TARGET --------------
  @raw : 2 + x + 3 + 4
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] VAR
      @val: x
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] OP
      @val: ADD
      @pos: 10

    [6] NUM
      @val: 4
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 8

    [4] OP
      @val: ADD
      @pos: 6

    [5] NUM
      @val: 4
      @pos: 12

    [6] OP
      @val: ADD
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + x + 3 + 4
    @postfix: 2 x + 3 + 4 +
    @prefix : + 2 x + 3 + 4

------------ INTERPRETING TARGET -----------
  @infix : 2 + x + 3 + 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 9 + x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

9 + x

$TEST #196
-------------- PARSING TARGET --------------
  @raw : 2 + x + 3 + y + 4
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] VAR
      @val: x
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] OP
      @val: ADD
      @pos: 10

    [6] VAR
      @val: y
      @pos: 12

    [7] OP
      @val: ADD
      @pos: 14

    [8] NUM
      @val: 4
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 8

    [4] OP
      @val: ADD
      @pos: 6

    [5] VAR
      @val: y
      @pos: 12

    [6] OP
      @val: ADD
      @pos: 10

    [7] NUM
      @val: 4
      @pos: 16

    [8] OP
      @val: ADD
      @pos: 14

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + x + 3 + y + 4
    @postfix: 2 x + 3 + y + 4 +
    @prefix : + 2 x + 3 + y + 4

------------ INTERPRETING TARGET -----------
  @infix : 2 + x + 3 + y + 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 9 + x + y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

9 + x + y

$TEST #197
-------------- PARSING TARGET --------------
  @raw : x + (0 / 0)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 0 / 0
    @postfix: x 0 0 / +
    @prefix : + x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x + 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of addition. This may cause unexpected behaviors.                                               

nan

$TEST #198
-------------- PARSING TARGET --------------
  @raw : x + 0
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 0
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 0
    @postfix: x 0 +
    @prefix : + x 0

------------ INTERPRETING TARGET -----------
  @infix : x + 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #199
-------------- PARSING TARGET --------------
  @raw : -x + 0 + -y
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] VAR
      @val: y
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: ADD
      @pos: 3

    [4] VAR
      @val: y
      @pos: 10

    [5] OP
      @val: MINUS
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : -x + 0 + -y
    @postfix: x - 0 + y - +
    @prefix : + x - 0 + y -

------------ INTERPRETING TARGET -----------
  @infix : -x + 0 + -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y)

$TEST #200
-------------- PARSING TARGET --------------
  @raw : x + -y + -z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 2

    [4] VAR
      @val: z
      @pos: 10

    [5] OP
      @val: MINUS
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : x + -y + -z
    @postfix: x y - + z - +
    @prefix : + x y - + z -

------------ INTERPRETING TARGET -----------
  @infix : x + -y + -z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(z + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(z + y)

$TEST #201
-------------- PARSING TARGET --------------
  @raw : -x + -y
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x + -y
    @postfix: x - y - +
    @prefix : + x - y -

------------ INTERPRETING TARGET -----------
  @infix : -x + -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y)

$TEST #202
-------------- PARSING TARGET --------------
  @raw : x + 2 + -y + -z
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] OP
      @val: MINUS
      @pos: 8

    [5] VAR
      @val: y
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 11

    [7] OP
      @val: MINUS
      @pos: 13

    [8] VAR
      @val: z
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

    [3] VAR
      @val: y
      @pos: 9

    [4] OP
      @val: MINUS
      @pos: 8

    [5] OP
      @val: ADD
      @pos: 6

    [6] VAR
      @val: z
      @pos: 14

    [7] OP
      @val: MINUS
      @pos: 13

    [8] OP
      @val: ADD
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 2 + -y + -z
    @postfix: x 2 + y - + z - +
    @prefix : + x 2 + y - + z -

------------ INTERPRETING TARGET -----------
  @infix : x + 2 + -y + -z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(z + y + -2)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(z + y + -2)

$TEST #203
-------------- PARSING TARGET --------------
  @raw : -x + 2 + -y
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] VAR
      @val: y
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: ADD
      @pos: 3

    [4] VAR
      @val: y
      @pos: 10

    [5] OP
      @val: MINUS
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : -x + 2 + -y
    @postfix: x - 2 + y - +
    @prefix : + x - 2 + y -

------------ INTERPRETING TARGET -----------
  @infix : -x + 2 + -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + -2 + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + -2 + y)

$TEST #204
-------------- PARSING TARGET --------------
  @raw : -x + 2
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: ADD
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x + 2
    @postfix: x - 2 +
    @prefix : + x - 2

------------ INTERPRETING TARGET -----------
  @infix : -x + 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + -2)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + -2)

$TEST #205
-------------- PARSING TARGET --------------
  @raw : x + 0 + -y + -z
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] NUM
      @val: 0
      @pos: 4

    [3] OP
      @val: ADD
      @pos: 6

    [4] OP
      @val: MINUS
      @pos: 8

    [5] VAR
      @val: y
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 11

    [7] OP
      @val: MINUS
      @pos: 13

    [8] VAR
      @val: z
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 4

    [2] OP
      @val: ADD
      @pos: 2

    [3] VAR
      @val: y
      @pos: 9

    [4] OP
      @val: MINUS
      @pos: 8

    [5] OP
      @val: ADD
      @pos: 6

    [6] VAR
      @val: z
      @pos: 14

    [7] OP
      @val: MINUS
      @pos: 13

    [8] OP
      @val: ADD
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : x + 0 + -y + -z
    @postfix: x 0 + y - + z - +
    @prefix : + x 0 + y - + z -

------------ INTERPRETING TARGET -----------
  @infix : x + 0 + -y + -z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(z + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(z + y)

$TEST #206
-------------- PARSING TARGET --------------
  @raw : -x + 0 + -y
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] VAR
      @val: y
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: ADD
      @pos: 3

    [4] VAR
      @val: y
      @pos: 10

    [5] OP
      @val: MINUS
      @pos: 9

    [6] OP
      @val: ADD
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : -x + 0 + -y
    @postfix: x - 0 + y - +
    @prefix : + x - 0 + y -

------------ INTERPRETING TARGET -----------
  @infix : -x + 0 + -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y)

$TEST #207
-------------- PARSING TARGET --------------
  @raw : x - y
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - y
    @postfix: x y -
    @prefix : - x y

------------ INTERPRETING TARGET -----------
  @infix : x - y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -y

$TEST #208
-------------- PARSING TARGET --------------
  @raw : x - -2
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - -2
    @postfix: x 2 - -
    @prefix : - x 2 -

------------ INTERPRETING TARGET -----------
  @infix : x - -2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + 2

$TEST #209
-------------- PARSING TARGET --------------
  @raw : x - -y
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - -y
    @postfix: x y - -
    @prefix : - x y -

------------ INTERPRETING TARGET -----------
  @infix : x - -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y

$TEST #210
-------------- PARSING TARGET --------------
  @raw : x - (y + z)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] VAR
      @val: z
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] VAR
      @val: z
      @pos: 9

    [3] OP
      @val: ADD
      @pos: 7

    [4] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - (y + z)
    @postfix: x y z + -
    @prefix : - x y z +

------------ INTERPRETING TARGET -----------
  @infix : x - (y + z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(z + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(z + y)

$TEST #211
-------------- PARSING TARGET --------------
  @raw : x - (-y + z)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: MINUS
      @pos: 5

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: ADD
      @pos: 8

    [5] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - (-y + z)
    @postfix: x y - z + -
    @prefix : - x y - z +

------------ INTERPRETING TARGET -----------
  @infix : x - (-y + z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + -z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + -z

$TEST #212
-------------- PARSING TARGET --------------
  @raw : x - (y + -2)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] NUM
      @val: 2
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 2
      @pos: 10

    [3] OP
      @val: MINUS
      @pos: 9

    [4] OP
      @val: ADD
      @pos: 7

    [5] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - (y + -2)
    @postfix: x y 2 - + -
    @prefix : - x y 2 - +

------------ INTERPRETING TARGET -----------
  @infix : x - (y + -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -(-2 + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -(-2 + y)

$TEST #213
-------------- PARSING TARGET --------------
  @raw : (x + y) - z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - z
    @postfix: x y + z -
    @prefix : - x y + z

------------ INTERPRETING TARGET -----------
  @infix : x + y - z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + -z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + -z

$TEST #214
-------------- PARSING TARGET --------------
  @raw : (x + y) - -z
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] OP
      @val: MINUS
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] OP
      @val: MINUS
      @pos: 10

    [5] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - -z
    @postfix: x y + z - -
    @prefix : - x y + z -

------------ INTERPRETING TARGET -----------
  @infix : x + y - -z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z

$TEST #215
-------------- PARSING TARGET --------------
  @raw : (x + y) - -2
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] OP
      @val: MINUS
      @pos: 10

    [7] NUM
      @val: 2
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 11

    [4] OP
      @val: MINUS
      @pos: 10

    [5] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - -2
    @postfix: x y + 2 - -
    @prefix : - x y + 2 -

------------ INTERPRETING TARGET -----------
  @infix : x + y - -2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + 2

$TEST #216
-------------- PARSING TARGET --------------
  @raw : (x + y) - (z + w)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 13

    [9] VAR
      @val: w
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] VAR
      @val: w
      @pos: 15

    [5] OP
      @val: ADD
      @pos: 13

    [6] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - (z + w)
    @postfix: x y + z w + -
    @prefix : - x y + z w +

------------ INTERPRETING TARGET -----------
  @infix : x + y - (z + w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + -(w + z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + -(w + z)

$TEST #217
-------------- PARSING TARGET --------------
  @raw : (x + y) - (-z + w)
  @size: 18 chars (67 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] OP
      @val: MINUS
      @pos: 11

    [8] VAR
      @val: z
      @pos: 12

    [9] OP
      @val: ADD
      @pos: 14

    [10] VAR
      @val: w
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 12

    [4] OP
      @val: MINUS
      @pos: 11

    [5] VAR
      @val: w
      @pos: 16

    [6] OP
      @val: ADD
      @pos: 14

    [7] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - (-z + w)
    @postfix: x y + z - w + -
    @prefix : - x y + z - w +

------------ INTERPRETING TARGET -----------
  @infix : x + y - (-z + w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z + -w

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z + -w

$TEST #218
-------------- PARSING TARGET --------------
  @raw : (x + y) - (z + -2)
  @size: 18 chars (67 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: SUB
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 13

    [9] OP
      @val: MINUS
      @pos: 15

    [10] NUM
      @val: 2
      @pos: 16

    [11] OP
      @val: RPAR
      @pos: 17

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: ADD
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 2
      @pos: 16

    [5] OP
      @val: MINUS
      @pos: 15

    [6] OP
      @val: ADD
      @pos: 13

    [7] OP
      @val: SUB
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x + y - (z + -2)
    @postfix: x y + z 2 - + -
    @prefix : - x y + z 2 - +

------------ INTERPRETING TARGET -----------
  @infix : x + y - (z + -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + -(-2 + z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + -(-2 + z)

$TEST #219
-------------- PARSING TARGET --------------
  @raw : x - -(y + z)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] VAR
      @val: z
      @pos: 10

    [3] OP
      @val: ADD
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - -(y + z)
    @postfix: x y z + - -
    @prefix : - x y z + -

------------ INTERPRETING TARGET -----------
  @infix : x - -(y + z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + z

$TEST #220
-------------- PARSING TARGET --------------
  @raw : x - -(-y + z)
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] OP
      @val: MINUS
      @pos: 6

    [5] VAR
      @val: y
      @pos: 7

    [6] OP
      @val: ADD
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: RPAR
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 7

    [2] OP
      @val: MINUS
      @pos: 6

    [3] VAR
      @val: z
      @pos: 11

    [4] OP
      @val: ADD
      @pos: 9

    [5] OP
      @val: MINUS
      @pos: 4

    [6] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - -(-y + z)
    @postfix: x y - z + - -
    @prefix : - x y - z + -

------------ INTERPRETING TARGET -----------
  @infix : x - -(-y + z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + -y + z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + -y + z

$TEST #221
-------------- PARSING TARGET --------------
  @raw : x - -(y + -2)
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] OP
      @val: MINUS
      @pos: 10

    [7] NUM
      @val: 2
      @pos: 11

    [8] OP
      @val: RPAR
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] NUM
      @val: 2
      @pos: 11

    [3] OP
      @val: MINUS
      @pos: 10

    [4] OP
      @val: ADD
      @pos: 8

    [5] OP
      @val: MINUS
      @pos: 4

    [6] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x - -(y + -2)
    @postfix: x y 2 - + - -
    @prefix : - x y 2 - + -

------------ INTERPRETING TARGET -----------
  @infix : x - -(y + -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x + y + -2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x + y + -2

$TEST #222
-------------- PARSING TARGET --------------
  @raw : -(x + y) - z
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 11

    [5] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - z
    @postfix: x y + - z -
    @prefix : - x y + - z

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y + z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y + z)

$TEST #223
-------------- PARSING TARGET --------------
  @raw : -(x + y) - -z
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] VAR
      @val: z
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 12

    [5] OP
      @val: MINUS
      @pos: 11

    [6] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - -z
    @postfix: x y + - z - -
    @prefix : - x y + - z -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - -z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: z + -(y + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

z + -(y + x)

$TEST #224
-------------- PARSING TARGET --------------
  @raw : -(x + y) - -2
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] NUM
      @val: 2
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] NUM
      @val: 2
      @pos: 12

    [5] OP
      @val: MINUS
      @pos: 11

    [6] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - -2
    @postfix: x y + - 2 - -
    @prefix : - x y + - 2 -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - -2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + y + -2)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + y + -2)

$TEST #225
-------------- PARSING TARGET --------------
  @raw : -(x + y) - -(z + w)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: z
      @pos: 13

    [10] OP
      @val: ADD
      @pos: 15

    [11] VAR
      @val: w
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 13

    [5] VAR
      @val: w
      @pos: 17

    [6] OP
      @val: ADD
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - -(z + w)
    @postfix: x y + - z w + - -
    @prefix : - x y + - z w + -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - -(z + w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: z + w + -(y + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

z + w + -(y + x)

$TEST #226
-------------- PARSING TARGET --------------
  @raw : -(x + y) - -(-z + w)
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] VAR
      @val: z
      @pos: 14

    [11] OP
      @val: ADD
      @pos: 16

    [12] VAR
      @val: w
      @pos: 18

    [13] OP
      @val: RPAR
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 14

    [5] OP
      @val: MINUS
      @pos: 13

    [6] VAR
      @val: w
      @pos: 18

    [7] OP
      @val: ADD
      @pos: 16

    [8] OP
      @val: MINUS
      @pos: 11

    [9] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - -(-z + w)
    @postfix: x y + - z - w + - -
    @prefix : - x y + - z - w + -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - -(-z + w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: w + -(z + y + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

w + -(z + y + x)

$TEST #227
-------------- PARSING TARGET --------------
  @raw : -(x + y) - -(z + -2)
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: z
      @pos: 13

    [10] OP
      @val: ADD
      @pos: 15

    [11] OP
      @val: MINUS
      @pos: 17

    [12] NUM
      @val: 2
      @pos: 18

    [13] OP
      @val: RPAR
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 13

    [5] NUM
      @val: 2
      @pos: 18

    [6] OP
      @val: MINUS
      @pos: 17

    [7] OP
      @val: ADD
      @pos: 15

    [8] OP
      @val: MINUS
      @pos: 11

    [9] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + y) - -(z + -2)
    @postfix: x y + - z 2 - + - -
    @prefix : - x y + - z 2 - + -

------------ INTERPRETING TARGET -----------
  @infix : -(x + y) - -(z + -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: z + -(2 + y + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

z + -(2 + y + x)

$TEST #228
-------------- PARSING TARGET --------------
  @raw : x * y
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y
    @postfix: x y *
    @prefix : * x y

------------ INTERPRETING TARGET -----------
  @infix : x * y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y

$TEST #229
-------------- PARSING TARGET --------------
  @raw : (x * y) * z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: MUL
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y * z
    @postfix: x y * z *
    @prefix : * x y * z

------------ INTERPRETING TARGET -----------
  @infix : x * y * z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z

$TEST #230
-------------- PARSING TARGET --------------
  @raw : x * (y * z)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] VAR
      @val: z
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] VAR
      @val: z
      @pos: 9

    [3] OP
      @val: MUL
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y * z
    @postfix: x y z * *
    @prefix : * x y z *

------------ INTERPRETING TARGET -----------
  @infix : x * y * z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z

$TEST #231
-------------- PARSING TARGET --------------
  @raw : (x * y) * (z * w)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] VAR
      @val: w
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] VAR
      @val: w
      @pos: 15

    [5] OP
      @val: MUL
      @pos: 13

    [6] OP
      @val: MUL
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y * z * w
    @postfix: x y * z w * *
    @prefix : * x y * z w *

------------ INTERPRETING TARGET -----------
  @infix : x * y * z * w

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z * w

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z * w

$TEST #232
-------------- PARSING TARGET --------------
  @raw : -(x * y) * z
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: MUL
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 11

    [5] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * y) * z
    @postfix: x y * - z *
    @prefix : * x y * - z

------------ INTERPRETING TARGET -----------
  @infix : -(x * y) * z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y * z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y * z)

$TEST #233
-------------- PARSING TARGET --------------
  @raw : x * -(y * z)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] VAR
      @val: z
      @pos: 10

    [3] OP
      @val: MUL
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -(y * z)
    @postfix: x y z * - *
    @prefix : * x y z * -

------------ INTERPRETING TARGET -----------
  @infix : x * -(y * z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y * z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y * z)

$TEST #234
-------------- PARSING TARGET --------------
  @raw : -(x * y) * -(z * w)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: z
      @pos: 13

    [10] OP
      @val: MUL
      @pos: 15

    [11] VAR
      @val: w
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: MUL
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: z
      @pos: 13

    [5] VAR
      @val: w
      @pos: 17

    [6] OP
      @val: MUL
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * y) * -(z * w)
    @postfix: x y * - z w * - *
    @prefix : * x y * - z w * -

------------ INTERPRETING TARGET -----------
  @infix : -(x * y) * -(z * w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z * w

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z * w

$TEST #235
-------------- PARSING TARGET --------------
  @raw : -x * -y * z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 3

    [5] VAR
      @val: z
      @pos: 10

    [6] OP
      @val: MUL
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * -y * z
    @postfix: x - y - * z *
    @prefix : * x - y - * z

------------ INTERPRETING TARGET -----------
  @infix : -x * -y * z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z

$TEST #236
-------------- PARSING TARGET --------------
  @raw : -x * y * z
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] VAR
      @val: z
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 5

    [3] OP
      @val: MUL
      @pos: 3

    [4] VAR
      @val: z
      @pos: 9

    [5] OP
      @val: MUL
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * y * z
    @postfix: x - y * z *
    @prefix : * x - y * z

------------ INTERPRETING TARGET -----------
  @infix : -x * y * z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y * z)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y * z)

$TEST #237
-------------- PARSING TARGET --------------
  @raw : x * (2 / 0)                 
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 2 / 0
    @postfix: x 2 0 / *
    @prefix : * x 2 0 /

------------ INTERPRETING TARGET -----------
  @infix : x * 2 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

x * inf

$TEST #238
-------------- PARSING TARGET --------------
  @raw : x * (-2 / 0)                
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 5

    [4] NUM
      @val: 2
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] NUM
      @val: 0
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 6

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 0
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

    [5] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -2 / 0
    @postfix: x 2 - 0 / *
    @prefix : * x 2 - 0 /

------------ INTERPRETING TARGET -----------
  @infix : x * -2 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

x * -inf

$TEST #239
-------------- PARSING TARGET --------------
  @raw : x * (0 / 0)                 
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 0 / 0
    @postfix: x 0 0 / *
    @prefix : * x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x * 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

nan

$TEST #240
-------------- PARSING TARGET --------------
  @raw : x * (2 / 0) * y * (0 / 0)   
  @size: 28 chars (77 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

    [7] OP
      @val: MUL
      @pos: 12

    [8] VAR
      @val: y
      @pos: 14

    [9] OP
      @val: MUL
      @pos: 16

    [10] OP
      @val: LPAR
      @pos: 18

    [11] NUM
      @val: 0
      @pos: 19

    [12] OP
      @val: DIV
      @pos: 21

    [13] NUM
      @val: 0
      @pos: 23

    [14] OP
      @val: RPAR
      @pos: 24

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

    [5] VAR
      @val: y
      @pos: 14

    [6] OP
      @val: MUL
      @pos: 12

    [7] NUM
      @val: 0
      @pos: 19

    [8] NUM
      @val: 0
      @pos: 23

    [9] OP
      @val: DIV
      @pos: 21

    [10] OP
      @val: MUL
      @pos: 16

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 2 / 0 * y * 0 / 0
    @postfix: x 2 0 / * y * 0 0 / *
    @prefix : * x 2 0 / * y * 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x * 2 / 0 * y * 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 6th oeprand of multiplication. This may cause unexpected behaviors.                                               

nan

$TEST #241
-------------- PARSING TARGET --------------
  @raw : 2 * 3 * 4
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 4
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 3
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 4
      @pos: 8

    [4] OP
      @val: MUL
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * 3 * 4
    @postfix: 2 3 * 4 *
    @prefix : * 2 3 * 4

------------ INTERPRETING TARGET -----------
  @infix : 2 * 3 * 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 24

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

24

$TEST #242
-------------- PARSING TARGET --------------
  @raw : 2 * x * 3 * 4
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: x
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] OP
      @val: MUL
      @pos: 10

    [6] NUM
      @val: 4
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 8

    [4] OP
      @val: MUL
      @pos: 6

    [5] NUM
      @val: 4
      @pos: 12

    [6] OP
      @val: MUL
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * x * 3 * 4
    @postfix: 2 x * 3 * 4 *
    @prefix : * 2 x * 3 * 4

------------ INTERPRETING TARGET -----------
  @infix : 2 * x * 3 * 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 24 * x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

24 * x

$TEST #243
-------------- PARSING TARGET --------------
  @raw : 2 * x * 3 * y * 4
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: x
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 3
      @pos: 8

    [5] OP
      @val: MUL
      @pos: 10

    [6] VAR
      @val: y
      @pos: 12

    [7] OP
      @val: MUL
      @pos: 14

    [8] NUM
      @val: 4
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 8

    [4] OP
      @val: MUL
      @pos: 6

    [5] VAR
      @val: y
      @pos: 12

    [6] OP
      @val: MUL
      @pos: 10

    [7] NUM
      @val: 4
      @pos: 16

    [8] OP
      @val: MUL
      @pos: 14

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * x * 3 * y * 4
    @postfix: 2 x * 3 * y * 4 *
    @prefix : * 2 x * 3 * y * 4

------------ INTERPRETING TARGET -----------
  @infix : 2 * x * 3 * y * 4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 24 * x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

24 * x * y

$TEST #244
-------------- PARSING TARGET --------------
  @raw : x * (0 / 0)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 0 / 0
    @postfix: x 0 0 / *
    @prefix : * x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x * 0 / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

nan

$TEST #245
-------------- PARSING TARGET --------------
  @raw : x * 1
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 1
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 1
    @postfix: x 1 *
    @prefix : * x 1

------------ INTERPRETING TARGET -----------
  @infix : x * 1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #246
-------------- PARSING TARGET --------------
  @raw : -x * 1
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] NUM
      @val: 1
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 1
      @pos: 5

    [3] OP
      @val: MUL
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * 1
    @postfix: x - 1 *
    @prefix : * x - 1

------------ INTERPRETING TARGET -----------
  @infix : -x * 1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-x

$TEST #247
-------------- PARSING TARGET --------------
  @raw : x * y * 1
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] NUM
      @val: 1
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 8

    [4] OP
      @val: MUL
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y * 1
    @postfix: x y * 1 *
    @prefix : * x y * 1

------------ INTERPRETING TARGET -----------
  @infix : x * y * 1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y

$TEST #248
-------------- PARSING TARGET --------------
  @raw : x * -y * 1
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] NUM
      @val: 1
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

    [4] NUM
      @val: 1
      @pos: 9

    [5] OP
      @val: MUL
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -y * 1
    @postfix: x y - * 1 *
    @prefix : * x y - * 1

------------ INTERPRETING TARGET -----------
  @infix : x * -y * 1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y)

$TEST #249
-------------- PARSING TARGET --------------
  @raw : x * -1
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 1
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -1
    @postfix: x 1 - *
    @prefix : * x 1 -

------------ INTERPRETING TARGET -----------
  @infix : x * -1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-x

$TEST #250
-------------- PARSING TARGET --------------
  @raw : -x * -1
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] OP
      @val: MINUS
      @pos: 5

    [4] NUM
      @val: 1
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 1
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * -1
    @postfix: x - 1 - *
    @prefix : * x - 1 -

------------ INTERPRETING TARGET -----------
  @infix : -x * -1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #251
-------------- PARSING TARGET --------------
  @raw : x * y * -1
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] OP
      @val: MINUS
      @pos: 8

    [5] NUM
      @val: 1
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 9

    [4] OP
      @val: MINUS
      @pos: 8

    [5] OP
      @val: MUL
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y * -1
    @postfix: x y * 1 - *
    @prefix : * x y * 1 -

------------ INTERPRETING TARGET -----------
  @infix : x * y * -1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y)

$TEST #252
-------------- PARSING TARGET --------------
  @raw : x * -y * -1
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] OP
      @val: MINUS
      @pos: 9

    [6] NUM
      @val: 1
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

    [4] NUM
      @val: 1
      @pos: 10

    [5] OP
      @val: MINUS
      @pos: 9

    [6] OP
      @val: MUL
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -y * -1
    @postfix: x y - * 1 - *
    @prefix : * x y - * 1 -

------------ INTERPRETING TARGET -----------
  @infix : x * -y * -1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y

$TEST #253
-------------- PARSING TARGET --------------
  @raw : x^-1 * y^-1
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] VAR
      @val: y
      @pos: 7

    [6] OP
      @val: POW
      @pos: 8

    [7] OP
      @val: MINUS
      @pos: 9

    [8] NUM
      @val: 1
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: POW
      @pos: 1

    [4] VAR
      @val: y
      @pos: 7

    [5] NUM
      @val: 1
      @pos: 10

    [6] OP
      @val: MINUS
      @pos: 9

    [7] OP
      @val: POW
      @pos: 8

    [8] OP
      @val: MUL
      @pos: 5

  Running AST generator................ [1;36mdone[0m
    @infix  : x^-1 * y^-1
    @postfix: x 1 - ^ y 1 - ^ *
    @prefix : * x 1 - ^ y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x^-1 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (x * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(x * y)^-1

$TEST #254
-------------- PARSING TARGET --------------
  @raw : x * y^-1 * z^-1
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

    [3] OP
      @val: POW
      @pos: 5

    [4] OP
      @val: MINUS
      @pos: 6

    [5] NUM
      @val: 1
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] NUM
      @val: 1
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] NUM
      @val: 1
      @pos: 7

    [3] OP
      @val: MINUS
      @pos: 6

    [4] OP
      @val: POW
      @pos: 5

    [5] OP
      @val: MUL
      @pos: 2

    [6] VAR
      @val: z
      @pos: 11

    [7] NUM
      @val: 1
      @pos: 14

    [8] OP
      @val: MINUS
      @pos: 13

    [9] OP
      @val: POW
      @pos: 12

    [10] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y^-1 * z^-1
    @postfix: x y 1 - ^ * z 1 - ^ *
    @prefix : * x y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (z * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (z * y)^-1

$TEST #255
-------------- PARSING TARGET --------------
  @raw : x * 2 * y^-1 * z^-1
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] VAR
      @val: y
      @pos: 8

    [5] OP
      @val: POW
      @pos: 9

    [6] OP
      @val: MINUS
      @pos: 10

    [7] NUM
      @val: 1
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] VAR
      @val: z
      @pos: 15

    [10] OP
      @val: POW
      @pos: 16

    [11] OP
      @val: MINUS
      @pos: 17

    [12] NUM
      @val: 1
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] VAR
      @val: y
      @pos: 8

    [4] NUM
      @val: 1
      @pos: 11

    [5] OP
      @val: MINUS
      @pos: 10

    [6] OP
      @val: POW
      @pos: 9

    [7] OP
      @val: MUL
      @pos: 6

    [8] VAR
      @val: z
      @pos: 15

    [9] NUM
      @val: 1
      @pos: 18

    [10] OP
      @val: MINUS
      @pos: 17

    [11] OP
      @val: POW
      @pos: 16

    [12] OP
      @val: MUL
      @pos: 13

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 2 * y^-1 * z^-1
    @postfix: x 2 * y 1 - ^ * z 1 - ^ *
    @prefix : * x 2 * y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x * 2 * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (z * y * 0.5)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (z * y * 0.5)^-1

$TEST #256
-------------- PARSING TARGET --------------
  @raw : x^-1 * 2 * y^-1
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] NUM
      @val: 2
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] VAR
      @val: y
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] NUM
      @val: 1
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: POW
      @pos: 1

    [4] NUM
      @val: 2
      @pos: 7

    [5] OP
      @val: MUL
      @pos: 5

    [6] VAR
      @val: y
      @pos: 11

    [7] NUM
      @val: 1
      @pos: 14

    [8] OP
      @val: MINUS
      @pos: 13

    [9] OP
      @val: POW
      @pos: 12

    [10] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : x^-1 * 2 * y^-1
    @postfix: x 1 - ^ 2 * y 1 - ^ *
    @prefix : * x 1 - ^ 2 * y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x^-1 * 2 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (x * 0.5 * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(x * 0.5 * y)^-1

$TEST #257
-------------- PARSING TARGET --------------
  @raw : -x^-1 * y^-1
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: POW
      @pos: 2

    [3] OP
      @val: MINUS
      @pos: 3

    [4] NUM
      @val: 1
      @pos: 4

    [5] OP
      @val: MUL
      @pos: 6

    [6] VAR
      @val: y
      @pos: 8

    [7] OP
      @val: POW
      @pos: 9

    [8] OP
      @val: MINUS
      @pos: 10

    [9] NUM
      @val: 1
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 1
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 3

    [4] OP
      @val: POW
      @pos: 2

    [5] VAR
      @val: y
      @pos: 8

    [6] NUM
      @val: 1
      @pos: 11

    [7] OP
      @val: MINUS
      @pos: 10

    [8] OP
      @val: POW
      @pos: 9

    [9] OP
      @val: MUL
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^-1 * y^-1
    @postfix: x - 1 - ^ y 1 - ^ *
    @prefix : * x - 1 - ^ y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : -x^-1 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -((x * y)^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-((x * y)^-1)

$TEST #258
-------------- PARSING TARGET --------------
  @raw : -x * y^-1 * z^-1
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 1
      @pos: 8

    [7] OP
      @val: MUL
      @pos: 10

    [8] VAR
      @val: z
      @pos: 12

    [9] OP
      @val: POW
      @pos: 13

    [10] OP
      @val: MINUS
      @pos: 14

    [11] NUM
      @val: 1
      @pos: 15

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 5

    [3] NUM
      @val: 1
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 7

    [5] OP
      @val: POW
      @pos: 6

    [6] OP
      @val: MUL
      @pos: 3

    [7] VAR
      @val: z
      @pos: 12

    [8] NUM
      @val: 1
      @pos: 15

    [9] OP
      @val: MINUS
      @pos: 14

    [10] OP
      @val: POW
      @pos: 13

    [11] OP
      @val: MUL
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * y^-1 * z^-1
    @postfix: x - y 1 - ^ * z 1 - ^ *
    @prefix : * x - y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : -x * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * (z * y)^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * (z * y)^-1)

$TEST #259
-------------- PARSING TARGET --------------
  @raw : -x * 2 * y^-1 * z^-1
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] VAR
      @val: y
      @pos: 9

    [6] OP
      @val: POW
      @pos: 10

    [7] OP
      @val: MINUS
      @pos: 11

    [8] NUM
      @val: 1
      @pos: 12

    [9] OP
      @val: MUL
      @pos: 14

    [10] VAR
      @val: z
      @pos: 16

    [11] OP
      @val: POW
      @pos: 17

    [12] OP
      @val: MINUS
      @pos: 18

    [13] NUM
      @val: 1
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: MUL
      @pos: 3

    [4] VAR
      @val: y
      @pos: 9

    [5] NUM
      @val: 1
      @pos: 12

    [6] OP
      @val: MINUS
      @pos: 11

    [7] OP
      @val: POW
      @pos: 10

    [8] OP
      @val: MUL
      @pos: 7

    [9] VAR
      @val: z
      @pos: 16

    [10] NUM
      @val: 1
      @pos: 19

    [11] OP
      @val: MINUS
      @pos: 18

    [12] OP
      @val: POW
      @pos: 17

    [13] OP
      @val: MUL
      @pos: 14

  Running AST generator................ [1;36mdone[0m
    @infix  : -x * 2 * y^-1 * z^-1
    @postfix: x - 2 * y 1 - ^ * z 1 - ^ *
    @prefix : * x - 2 * y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : -x * 2 * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (z * y * -0.5)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (z * y * -0.5)^-1

$TEST #260
-------------- PARSING TARGET --------------
  @raw : -x^-1 * 2 * y^-1
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: POW
      @pos: 2

    [3] OP
      @val: MINUS
      @pos: 3

    [4] NUM
      @val: 1
      @pos: 4

    [5] OP
      @val: MUL
      @pos: 6

    [6] NUM
      @val: 2
      @pos: 8

    [7] OP
      @val: MUL
      @pos: 10

    [8] VAR
      @val: y
      @pos: 12

    [9] OP
      @val: POW
      @pos: 13

    [10] OP
      @val: MINUS
      @pos: 14

    [11] NUM
      @val: 1
      @pos: 15

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 1
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 3

    [4] OP
      @val: POW
      @pos: 2

    [5] NUM
      @val: 2
      @pos: 8

    [6] OP
      @val: MUL
      @pos: 6

    [7] VAR
      @val: y
      @pos: 12

    [8] NUM
      @val: 1
      @pos: 15

    [9] OP
      @val: MINUS
      @pos: 14

    [10] OP
      @val: POW
      @pos: 13

    [11] OP
      @val: MUL
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^-1 * 2 * y^-1
    @postfix: x - 1 - ^ 2 * y 1 - ^ *
    @prefix : * x - 1 - ^ 2 * y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : -x^-1 * 2 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (x * -0.5 * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(x * -0.5 * y)^-1

$TEST #261
-------------- PARSING TARGET --------------
  @raw : x^-1 * 1 * y^-1
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] NUM
      @val: 1
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] VAR
      @val: y
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] NUM
      @val: 1
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: POW
      @pos: 1

    [4] NUM
      @val: 1
      @pos: 7

    [5] OP
      @val: MUL
      @pos: 5

    [6] VAR
      @val: y
      @pos: 11

    [7] NUM
      @val: 1
      @pos: 14

    [8] OP
      @val: MINUS
      @pos: 13

    [9] OP
      @val: POW
      @pos: 12

    [10] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : x^-1 * 1 * y^-1
    @postfix: x 1 - ^ 1 * y 1 - ^ *
    @prefix : * x 1 - ^ 1 * y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x^-1 * 1 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (x * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(x * y)^-1

$TEST #262
-------------- PARSING TARGET --------------
  @raw : x * 1 * y^-1 * z^-1
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] NUM
      @val: 1
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 6

    [4] VAR
      @val: y
      @pos: 8

    [5] OP
      @val: POW
      @pos: 9

    [6] OP
      @val: MINUS
      @pos: 10

    [7] NUM
      @val: 1
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] VAR
      @val: z
      @pos: 15

    [10] OP
      @val: POW
      @pos: 16

    [11] OP
      @val: MINUS
      @pos: 17

    [12] NUM
      @val: 1
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 4

    [2] OP
      @val: MUL
      @pos: 2

    [3] VAR
      @val: y
      @pos: 8

    [4] NUM
      @val: 1
      @pos: 11

    [5] OP
      @val: MINUS
      @pos: 10

    [6] OP
      @val: POW
      @pos: 9

    [7] OP
      @val: MUL
      @pos: 6

    [8] VAR
      @val: z
      @pos: 15

    [9] NUM
      @val: 1
      @pos: 18

    [10] OP
      @val: MINUS
      @pos: 17

    [11] OP
      @val: POW
      @pos: 16

    [12] OP
      @val: MUL
      @pos: 13

  Running AST generator................ [1;36mdone[0m
    @infix  : x * 1 * y^-1 * z^-1
    @postfix: x 1 * y 1 - ^ * z 1 - ^ *
    @prefix : * x 1 * y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x * 1 * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (z * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (z * y)^-1

$TEST #263
-------------- PARSING TARGET --------------
  @raw : x^-1 * -1 * y^-1
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] NUM
      @val: 1
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 1
      @pos: 8

    [7] OP
      @val: MUL
      @pos: 10

    [8] VAR
      @val: y
      @pos: 12

    [9] OP
      @val: POW
      @pos: 13

    [10] OP
      @val: MINUS
      @pos: 14

    [11] NUM
      @val: 1
      @pos: 15

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 2

    [3] OP
      @val: POW
      @pos: 1

    [4] NUM
      @val: 1
      @pos: 8

    [5] OP
      @val: MINUS
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 5

    [7] VAR
      @val: y
      @pos: 12

    [8] NUM
      @val: 1
      @pos: 15

    [9] OP
      @val: MINUS
      @pos: 14

    [10] OP
      @val: POW
      @pos: 13

    [11] OP
      @val: MUL
      @pos: 10

  Running AST generator................ [1;36mdone[0m
    @infix  : x^-1 * -1 * y^-1
    @postfix: x 1 - ^ 1 - * y 1 - ^ *
    @prefix : * x 1 - ^ 1 - * y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x^-1 * -1 * y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -((x * y)^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-((x * y)^-1)

$TEST #264
-------------- PARSING TARGET --------------
  @raw : x * -1 * y^-1 * z^-1
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 1
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] VAR
      @val: y
      @pos: 9

    [6] OP
      @val: POW
      @pos: 10

    [7] OP
      @val: MINUS
      @pos: 11

    [8] NUM
      @val: 1
      @pos: 12

    [9] OP
      @val: MUL
      @pos: 14

    [10] VAR
      @val: z
      @pos: 16

    [11] OP
      @val: POW
      @pos: 17

    [12] OP
      @val: MINUS
      @pos: 18

    [13] NUM
      @val: 1
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 2

    [4] VAR
      @val: y
      @pos: 9

    [5] NUM
      @val: 1
      @pos: 12

    [6] OP
      @val: MINUS
      @pos: 11

    [7] OP
      @val: POW
      @pos: 10

    [8] OP
      @val: MUL
      @pos: 7

    [9] VAR
      @val: z
      @pos: 16

    [10] NUM
      @val: 1
      @pos: 19

    [11] OP
      @val: MINUS
      @pos: 18

    [12] OP
      @val: POW
      @pos: 17

    [13] OP
      @val: MUL
      @pos: 14

  Running AST generator................ [1;36mdone[0m
    @infix  : x * -1 * y^-1 * z^-1
    @postfix: x 1 - * y 1 - ^ * z 1 - ^ *
    @prefix : * x 1 - * y 1 - ^ * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x * -1 * y^-1 * z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * (z * y)^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * (z * y)^-1)

$TEST #265
-------------- PARSING TARGET --------------
  @raw : x / -y
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / -y
    @postfix: x y - /
    @prefix : / x y -

------------ INTERPRETING TARGET -----------
  @infix : x / -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y^-1)

$TEST #266
-------------- PARSING TARGET --------------
  @raw : 2 / -y
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / -y
    @postfix: 2 y - /
    @prefix : / 2 y -

------------ INTERPRETING TARGET -----------
  @infix : 2 / -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (-0.5 * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(-0.5 * y)^-1

$TEST #267
-------------- PARSING TARGET --------------
  @raw : -x / -y
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x / -y
    @postfix: x - y - /
    @prefix : / x - y -

------------ INTERPRETING TARGET -----------
  @infix : -x / -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * y^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * y^-1)

$TEST #268
-------------- PARSING TARGET --------------
  @raw : x / y
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] VAR
      @val: y
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 4

    [2] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / y
    @postfix: x y /
    @prefix : / x y

------------ INTERPRETING TARGET -----------
  @infix : x / y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y^-1

$TEST #269
-------------- PARSING TARGET --------------
  @raw : x / (y^-1)
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 1
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 1
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / y^-1
    @postfix: x y 1 - ^ /
    @prefix : / x y 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x / y^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y

$TEST #270
-------------- PARSING TARGET --------------
  @raw : x / (y^2)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] NUM
      @val: 2
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 2
      @pos: 7

    [3] OP
      @val: POW
      @pos: 6

    [4] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / y^2
    @postfix: x y 2 ^ /
    @prefix : / x y 2 ^

------------ INTERPRETING TARGET -----------
  @infix : x / y^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y^-2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y^-2

$TEST #271
-------------- PARSING TARGET --------------
  @raw : x / 2
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] NUM
      @val: 2
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 4

    [2] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / 2
    @postfix: x 2 /
    @prefix : / x 2

------------ INTERPRETING TARGET -----------
  @infix : x / 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 0.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 0.5

$TEST #272
-------------- PARSING TARGET --------------
  @raw : (x * y) / z
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / z
    @postfix: x y * z /
    @prefix : / x y * z

------------ INTERPRETING TARGET -----------
  @infix : x * y / z

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z^-1

$TEST #273
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z^-1)
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] NUM
      @val: 1
      @pos: 14

    [11] OP
      @val: RPAR
      @pos: 15

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 1
      @pos: 14

    [5] OP
      @val: MINUS
      @pos: 13

    [6] OP
      @val: POW
      @pos: 12

    [7] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / z^-1
    @postfix: x y * z 1 - ^ /
    @prefix : / x y * z 1 - ^

------------ INTERPRETING TARGET -----------
  @infix : x * y / z^-1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z

$TEST #274
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z^2)
  @size: 15 chars (64 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] NUM
      @val: 2
      @pos: 13

    [10] OP
      @val: RPAR
      @pos: 14

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 2
      @pos: 13

    [5] OP
      @val: POW
      @pos: 12

    [6] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / z^2
    @postfix: x y * z 2 ^ /
    @prefix : / x y * z 2 ^

------------ INTERPRETING TARGET -----------
  @infix : x * y / z^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z^-2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z^-2

$TEST #275
-------------- PARSING TARGET --------------
  @raw : (x * y) / 2
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] NUM
      @val: 2
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / 2
    @postfix: x y * 2 /
    @prefix : / x y * 2

------------ INTERPRETING TARGET -----------
  @infix : x * y / 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * 0.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * 0.5

$TEST #276
-------------- PARSING TARGET --------------
  @raw : (x * y) / 0
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] NUM
      @val: 0
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / 0
    @postfix: x y * 0 /
    @prefix : / x y * 0

------------ INTERPRETING TARGET -----------
  @infix : x * y / 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

x * y * inf

$TEST #277
-------------- PARSING TARGET --------------
  @raw : x / (y * z)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] VAR
      @val: z
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] VAR
      @val: z
      @pos: 9

    [3] OP
      @val: MUL
      @pos: 7

    [4] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (y * z)
    @postfix: x y z * /
    @prefix : / x y z *

------------ INTERPRETING TARGET -----------
  @infix : x / (y * z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (z * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (z * y)^-1

$TEST #278
-------------- PARSING TARGET --------------
  @raw : x / (y^-1 * z)
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 1
      @pos: 8

    [7] OP
      @val: MUL
      @pos: 10

    [8] VAR
      @val: z
      @pos: 12

    [9] OP
      @val: RPAR
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 1
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: POW
      @pos: 6

    [5] VAR
      @val: z
      @pos: 12

    [6] OP
      @val: MUL
      @pos: 10

    [7] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (y^-1 * z)
    @postfix: x y 1 - ^ z * /
    @prefix : / x y 1 - ^ z *

------------ INTERPRETING TARGET -----------
  @infix : x / (y^-1 * z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z^-1

$TEST #279
-------------- PARSING TARGET --------------
  @raw : x / (y^2 * z)
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] NUM
      @val: 2
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: RPAR
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 2
      @pos: 7

    [3] OP
      @val: POW
      @pos: 6

    [4] VAR
      @val: z
      @pos: 11

    [5] OP
      @val: MUL
      @pos: 9

    [6] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (y^2 * z)
    @postfix: x y 2 ^ z * /
    @prefix : / x y 2 ^ z *

------------ INTERPRETING TARGET -----------
  @infix : x / (y^2 * z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y^-2 * z^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y^-2 * z^-1

$TEST #280
-------------- PARSING TARGET --------------
  @raw : x / (y * 2)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] NUM
      @val: 2
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 2
      @pos: 9

    [3] OP
      @val: MUL
      @pos: 7

    [4] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (y * 2)
    @postfix: x y 2 * /
    @prefix : / x y 2 *

------------ INTERPRETING TARGET -----------
  @infix : x / (y * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (2.0 * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (2.0 * y)^-1

$TEST #281
-------------- PARSING TARGET --------------
  @raw : x / (y * 0)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: MUL
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: MUL
      @pos: 7

    [4] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (y * 0)
    @postfix: x y 0 * /
    @prefix : / x y 0 *

------------ INTERPRETING TARGET -----------
  @infix : x / (y * 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (0.0 * y)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 3rd oeprand of multiplication. This may cause unexpected behaviors.                                               

x * (0.0 * y)^-1

$TEST #282
-------------- PARSING TARGET --------------
  @raw : x / (-y * z)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] VAR
      @val: z
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] VAR
      @val: y
      @pos: 6

    [2] OP
      @val: MINUS
      @pos: 5

    [3] VAR
      @val: z
      @pos: 10

    [4] OP
      @val: MUL
      @pos: 8

    [5] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x / (-y * z)
    @postfix: x y - z * /
    @prefix : / x y - z *

------------ INTERPRETING TARGET -----------
  @infix : x / (-y * z)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x * (z * y)^-1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x * (z * y)^-1)

$TEST #283
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z * w)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] VAR
      @val: w
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] VAR
      @val: w
      @pos: 15

    [5] OP
      @val: MUL
      @pos: 13

    [6] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / (z * w)
    @postfix: x y * z w * /
    @prefix : / x y * z w *

------------ INTERPRETING TARGET -----------
  @infix : x * y / (z * w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * (w * z)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * (w * z)^-1

$TEST #284
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z^-1 * w)
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] OP
      @val: MINUS
      @pos: 13

    [10] NUM
      @val: 1
      @pos: 14

    [11] OP
      @val: MUL
      @pos: 16

    [12] VAR
      @val: w
      @pos: 18

    [13] OP
      @val: RPAR
      @pos: 19

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 1
      @pos: 14

    [5] OP
      @val: MINUS
      @pos: 13

    [6] OP
      @val: POW
      @pos: 12

    [7] VAR
      @val: w
      @pos: 18

    [8] OP
      @val: MUL
      @pos: 16

    [9] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / (z^-1 * w)
    @postfix: x y * z 1 - ^ w * /
    @prefix : / x y * z 1 - ^ w *

------------ INTERPRETING TARGET -----------
  @infix : x * y / (z^-1 * w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z * w^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z * w^-1

$TEST #285
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z^2 * w)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: POW
      @pos: 12

    [9] NUM
      @val: 2
      @pos: 13

    [10] OP
      @val: MUL
      @pos: 15

    [11] VAR
      @val: w
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 2
      @pos: 13

    [5] OP
      @val: POW
      @pos: 12

    [6] VAR
      @val: w
      @pos: 17

    [7] OP
      @val: MUL
      @pos: 15

    [8] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / (z^2 * w)
    @postfix: x y * z 2 ^ w * /
    @prefix : / x y * z 2 ^ w *

------------ INTERPRETING TARGET -----------
  @infix : x * y / (z^2 * w)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * z^-2 * w^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * z^-2 * w^-1

$TEST #286
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z * 2)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] NUM
      @val: 2
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 2
      @pos: 15

    [5] OP
      @val: MUL
      @pos: 13

    [6] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / (z * 2)
    @postfix: x y * z 2 * /
    @prefix : / x y * z 2 *

------------ INTERPRETING TARGET -----------
  @infix : x * y / (z * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * (2.0 * z)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * y * (2.0 * z)^-1

$TEST #287
-------------- PARSING TARGET --------------
  @raw : (x * y) / (z * 0)
  @size: 17 chars (66 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: y
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] VAR
      @val: z
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 13

    [9] NUM
      @val: 0
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] VAR
      @val: y
      @pos: 5

    [2] OP
      @val: MUL
      @pos: 3

    [3] VAR
      @val: z
      @pos: 11

    [4] NUM
      @val: 0
      @pos: 15

    [5] OP
      @val: MUL
      @pos: 13

    [6] OP
      @val: DIV
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : x * y / (z * 0)
    @postfix: x y * z 0 * /
    @prefix : / x y * z 0 *

------------ INTERPRETING TARGET -----------
  @infix : x * y / (z * 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * y * (0.0 * z)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 4th oeprand of multiplication. This may cause unexpected behaviors.                                               

x * y * (0.0 * z)^-1

$TEST #288
-------------- PARSING TARGET --------------
  @raw : -x % -y
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: REM
      @pos: 3

    [3] OP
      @val: MINUS
      @pos: 5

    [4] VAR
      @val: y
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] VAR
      @val: y
      @pos: 6

    [3] OP
      @val: MINUS
      @pos: 5

    [4] OP
      @val: REM
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : -x % -y
    @postfix: x - y - %
    @prefix : % x - y -

------------ INTERPRETING TARGET -----------
  @infix : -x % -y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x % y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x % y)

$TEST #289
-------------- PARSING TARGET --------------
  @raw : x % (2 / 0)         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % (2 / 0)
    @postfix: x 2 0 / %
    @prefix : % x 2 0 /

------------ INTERPRETING TARGET -----------
  @infix : x % (2 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x % inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of remainder operation. This may cause unexpected behaviors.                                               

x % inf

$TEST #290
-------------- PARSING TARGET --------------
  @raw : x % (-2 / 0)         
  @size: 21 chars (70 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 5

    [4] NUM
      @val: 2
      @pos: 6

    [5] OP
      @val: DIV
      @pos: 8

    [6] NUM
      @val: 0
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 6

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 0
      @pos: 10

    [4] OP
      @val: DIV
      @pos: 8

    [5] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % (-2 / 0)
    @postfix: x 2 - 0 / %
    @prefix : % x 2 - 0 /

------------ INTERPRETING TARGET -----------
  @infix : x % (-2 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x % -inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of remainder operation. This may cause unexpected behaviors.                                               

x % -inf

$TEST #291
-------------- PARSING TARGET --------------
  @raw : x % (0 / 0)         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % (0 / 0)
    @postfix: x 0 0 / %
    @prefix : % x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x % (0 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of remainder operation. This may cause unexpected behaviors.                                               

nan

$TEST #292
-------------- PARSING TARGET --------------
  @raw : (2 / 0) % x         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: REM
      @pos: 8

    [6] VAR
      @val: x
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] VAR
      @val: x
      @pos: 10

    [4] OP
      @val: REM
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / 0 % x
    @postfix: 2 0 / x %
    @prefix : % 2 0 / x

------------ INTERPRETING TARGET -----------
  @infix : 2 / 0 % x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: inf % x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of remainder operation. This may cause unexpected behaviors.                                               

inf % x

$TEST #293
-------------- PARSING TARGET --------------
  @raw : (0 / 0) % x         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: REM
      @pos: 8

    [6] VAR
      @val: x
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] VAR
      @val: x
      @pos: 10

    [4] OP
      @val: REM
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : 0 / 0 % x
    @postfix: 0 0 / x %
    @prefix : % 0 0 / x

------------ INTERPRETING TARGET -----------
  @infix : 0 / 0 % x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st operand of remainder operation. This may cause unexpected behaviors.                                               

nan

$TEST #294
-------------- PARSING TARGET --------------
  @raw : (2 / 0) % (0 / 0)   
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: REM
      @pos: 8

    [6] OP
      @val: LPAR
      @pos: 10

    [7] NUM
      @val: 0
      @pos: 11

    [8] OP
      @val: DIV
      @pos: 13

    [9] NUM
      @val: 0
      @pos: 15

    [10] OP
      @val: RPAR
      @pos: 16

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 11

    [4] NUM
      @val: 0
      @pos: 15

    [5] OP
      @val: DIV
      @pos: 13

    [6] OP
      @val: REM
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / 0 % (0 / 0)
    @postfix: 2 0 / 0 0 / %
    @prefix : % 2 0 / 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : 2 / 0 % (0 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[2] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of remainder operation. This may cause unexpected behaviors.                                               
[3] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of remainder operation. This may cause unexpected behaviors.                                               

nan

$TEST #295
-------------- PARSING TARGET --------------
  @raw : x % 0               
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] NUM
      @val: 0
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 4

    [2] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % 0
    @postfix: x 0 %
    @prefix : % x 0

------------ INTERPRETING TARGET -----------
  @infix : x % 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Remainder operation with 0 as denominator may cause unexpected behaviors.                                               

nan

$TEST #296
-------------- PARSING TARGET --------------
  @raw : 2.1 % 2.3
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 0

    [1] OP
      @val: REM
      @pos: 4

    [2] NUM
      @val: 2.3
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 0

    [1] NUM
      @val: 2.3
      @pos: 6

    [2] OP
      @val: REM
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : 2.1 % 2.3
    @postfix: 2.1 2.3 %
    @prefix : % 2.1 2.3

------------ INTERPRETING TARGET -----------
  @infix : 2.1 % 2.3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2.1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2.1

$TEST #297
-------------- PARSING TARGET --------------
  @raw : -2.1 % 2.3
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] NUM
      @val: 2.1
      @pos: 1

    [2] OP
      @val: REM
      @pos: 5

    [3] NUM
      @val: 2.3
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 2.3
      @pos: 7

    [3] OP
      @val: REM
      @pos: 5

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1 % 2.3
    @postfix: 2.1 - 2.3 %
    @prefix : % 2.1 - 2.3

------------ INTERPRETING TARGET -----------
  @infix : -2.1 % 2.3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.19999999999999973

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.19999999999999973

$TEST #298
-------------- PARSING TARGET --------------
  @raw : 2.1 % -2.3
  @size: 10 chars (59 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 0

    [1] OP
      @val: REM
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 6

    [3] NUM
      @val: 2.3
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 0

    [1] NUM
      @val: 2.3
      @pos: 7

    [2] OP
      @val: MINUS
      @pos: 6

    [3] OP
      @val: REM
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : 2.1 % -2.3
    @postfix: 2.1 2.3 - %
    @prefix : % 2.1 2.3 -

------------ INTERPRETING TARGET -----------
  @infix : 2.1 % -2.3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.19999999999999973

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.19999999999999973

$TEST #299
-------------- PARSING TARGET --------------
  @raw : -2.1 % -2.3
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] NUM
      @val: 2.1
      @pos: 1

    [2] OP
      @val: REM
      @pos: 5

    [3] OP
      @val: MINUS
      @pos: 7

    [4] NUM
      @val: 2.3
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

    [2] NUM
      @val: 2.3
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: REM
      @pos: 5

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1 % -2.3
    @postfix: 2.1 - 2.3 - %
    @prefix : % 2.1 - 2.3 -

------------ INTERPRETING TARGET -----------
  @infix : -2.1 % -2.3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -2.1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-2.1

$TEST #300
-------------- PARSING TARGET --------------
  @raw : x % (0 / 0)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] OP
      @val: LPAR
      @pos: 4

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % (0 / 0)
    @postfix: x 0 0 / %
    @prefix : % x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x % (0 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of remainder operation. This may cause unexpected behaviors.                                               

nan

$TEST #301
-------------- PARSING TARGET --------------
  @raw : (0 / 0) % x
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: REM
      @pos: 8

    [6] VAR
      @val: x
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] VAR
      @val: x
      @pos: 10

    [4] OP
      @val: REM
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : 0 / 0 % x
    @postfix: 0 0 / x %
    @prefix : % 0 0 / x

------------ INTERPRETING TARGET -----------
  @infix : 0 / 0 % x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st operand of remainder operation. This may cause unexpected behaviors.                                               

nan

$TEST #302
-------------- PARSING TARGET --------------
  @raw : x % 0
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: REM
      @pos: 2

    [2] NUM
      @val: 0
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 4

    [2] OP
      @val: REM
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : x % 0
    @postfix: x 0 %
    @prefix : % x 0

------------ INTERPRETING TARGET -----------
  @infix : x % 0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Remainder operation with 0 as denominator may cause unexpected behaviors.                                               

nan

$TEST #303
-------------- PARSING TARGET --------------
  @raw : (-1)!       
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 1
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: FACT
      @pos: 4

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 1
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] OP
      @val: FACT
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -1!
    @postfix: 1 - !
    @prefix : ! 1 -

------------ INTERPRETING TARGET -----------
  @infix : -1!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Factorial of nonpositive integer may cause unexpected behaviors.                                                        

nan

$TEST #304
-------------- PARSING TARGET --------------
  @raw : (2 / 0)!    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: FACT
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] OP
      @val: FACT
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : (2 / 0)!
    @postfix: 2 0 / !
    @prefix : ! 2 0 /

------------ INTERPRETING TARGET -----------
  @infix : (2 / 0)!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of factorial operation. This may cause unexpected behaviors.                                               

inf

$TEST #305
-------------- PARSING TARGET --------------
  @raw : (-2 / 0)!    
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 0
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: FACT
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 0
      @pos: 6

    [3] OP
      @val: DIV
      @pos: 4

    [4] OP
      @val: FACT
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : (-2 / 0)!
    @postfix: 2 - 0 / !
    @prefix : ! 2 - 0 /

------------ INTERPRETING TARGET -----------
  @infix : (-2 / 0)!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of factorial operation. This may cause unexpected behaviors.                                               

nan

$TEST #306
-------------- PARSING TARGET --------------
  @raw : (0 / 0)!    
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: FACT
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] OP
      @val: FACT
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : (0 / 0)!
    @postfix: 0 0 / !
    @prefix : ! 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : (0 / 0)!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st operand of factorial operation. This may cause unexpected behaviors.                                               

nan

$TEST #307
-------------- PARSING TARGET --------------
  @raw : 6!
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 6
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 6
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 6!
    @postfix: 6 !
    @prefix : ! 6

------------ INTERPRETING TARGET -----------
  @infix : 6!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 720

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

720

$TEST #308
-------------- PARSING TARGET --------------
  @raw : 6.3!
  @size: 4 chars (53 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 6.3
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 3

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 6.3
      @pos: 0

    [1] OP
      @val: FACT
      @pos: 3

  Running AST generator................ [1;36mdone[0m
    @infix  : 6.3!
    @postfix: 6.3 !
    @prefix : ! 6.3

------------ INTERPRETING TARGET -----------
  @infix : 6.3!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1271.4236336639085

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1271.4236336639085

$TEST #309
-------------- PARSING TARGET --------------
  @raw : (-1.3)!
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 1.3
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 5

    [4] OP
      @val: FACT
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 1.3
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] OP
      @val: FACT
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -1.3!
    @postfix: 1.3 - !
    @prefix : ! 1.3 -

------------ INTERPRETING TARGET -----------
  @infix : -1.3!

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -4.326851108825193

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-4.326851108825193

$TEST #310
-------------- PARSING TARGET --------------
  @raw : (-x)^3
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] NUM
      @val: 3
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 5

    [3] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^3
    @postfix: x - 3 ^
    @prefix : ^ x - 3

------------ INTERPRETING TARGET -----------
  @infix : -x^3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x^3)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x^3)

$TEST #311
-------------- PARSING TARGET --------------
  @raw : (-x)^(-3)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] OP
      @val: LPAR
      @pos: 5

    [6] OP
      @val: MINUS
      @pos: 6

    [7] NUM
      @val: 3
      @pos: 7

    [8] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 3
      @pos: 7

    [3] OP
      @val: MINUS
      @pos: 6

    [4] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^-3
    @postfix: x - 3 - ^
    @prefix : ^ x - 3 -

------------ INTERPRETING TARGET -----------
  @infix : -x^-3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x^-3)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x^-3)

$TEST #312
-------------- PARSING TARGET --------------
  @raw : (2 / 0)^2       
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: POW
      @pos: 7

    [6] NUM
      @val: 2
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 8

    [4] OP
      @val: POW
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : (2 / 0)^2
    @postfix: 2 0 / 2 ^
    @prefix : ^ 2 0 / 2

------------ INTERPRETING TARGET -----------
  @infix : (2 / 0)^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of power operation. This may cause unexpected behaviors.                                               

inf

$TEST #313
-------------- PARSING TARGET --------------
  @raw : (-2 / 0)^2      
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 0
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: POW
      @pos: 8

    [7] NUM
      @val: 2
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 0
      @pos: 6

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 2
      @pos: 9

    [5] OP
      @val: POW
      @pos: 8

  Running AST generator................ [1;36mdone[0m
    @infix  : (-2 / 0)^2
    @postfix: 2 - 0 / 2 ^
    @prefix : ^ 2 - 0 / 2

------------ INTERPRETING TARGET -----------
  @infix : (-2 / 0)^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st oeprand of power operation. This may cause unexpected behaviors.                                               

inf

$TEST #314
-------------- PARSING TARGET --------------
  @raw : (0 / 0)^2       
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 1

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 0
      @pos: 5

    [4] OP
      @val: RPAR
      @pos: 6

    [5] OP
      @val: POW
      @pos: 7

    [6] NUM
      @val: 2
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 1

    [1] NUM
      @val: 0
      @pos: 5

    [2] OP
      @val: DIV
      @pos: 3

    [3] NUM
      @val: 2
      @pos: 8

    [4] OP
      @val: POW
      @pos: 7

  Running AST generator................ [1;36mdone[0m
    @infix  : (0 / 0)^2
    @postfix: 0 0 / 2 ^
    @prefix : ^ 0 0 / 2

------------ INTERPRETING TARGET -----------
  @infix : (0 / 0)^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st operand of power operation. This may cause unexpected behaviors.                                               

nan

$TEST #315
-------------- PARSING TARGET --------------
  @raw : 2^(2 / 0)       
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] NUM
      @val: 2
      @pos: 3

    [4] OP
      @val: DIV
      @pos: 5

    [5] NUM
      @val: 0
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 7

    [3] OP
      @val: DIV
      @pos: 5

    [4] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^(2 / 0)
    @postfix: 2 2 0 / ^
    @prefix : ^ 2 2 0 /

------------ INTERPRETING TARGET -----------
  @infix : 2^(2 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: inf

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of power operation. This may cause unexpected behaviors.                                               

inf

$TEST #316
-------------- PARSING TARGET --------------
  @raw : 2^(0 / 0)       
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] NUM
      @val: 0
      @pos: 3

    [4] OP
      @val: DIV
      @pos: 5

    [5] NUM
      @val: 0
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 7

    [3] OP
      @val: DIV
      @pos: 5

    [4] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 2^(0 / 0)
    @postfix: 2 0 0 / ^
    @prefix : ^ 2 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : 2^(0 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of power operation. This may cause unexpected behaviors.                                               

nan

$TEST #317
-------------- PARSING TARGET --------------
  @raw : 0^(-2)          
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] OP
      @val: MINUS
      @pos: 3

    [4] NUM
      @val: 2
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 3

    [3] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 0^-2
    @postfix: 0 2 - ^
    @prefix : ^ 0 2 -

------------ INTERPRETING TARGET -----------
  @infix : 0^-2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Power operation with base 0 and negative exponent may cause unexpected behaviors.                                       

nan

$TEST #318
-------------- PARSING TARGET --------------
  @raw : 0^(-2.1)        
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] OP
      @val: MINUS
      @pos: 3

    [4] NUM
      @val: 2.1
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] NUM
      @val: 2.1
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 3

    [3] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 0^-2.1
    @postfix: 0 2.1 - ^
    @prefix : ^ 0 2.1 -

------------ INTERPRETING TARGET -----------
  @infix : 0^-2.1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Power operation with base 0 and negative exponent may cause unexpected behaviors.                                       

nan

$TEST #319
-------------- PARSING TARGET --------------
  @raw : 0^2.1
  @size: 5 chars (54 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 0

    [1] NUM
      @val: 2.1
      @pos: 2

    [2] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : 0^2.1
    @postfix: 0 2.1 ^
    @prefix : ^ 0 2.1

------------ INTERPRETING TARGET -----------
  @infix : 0^2.1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.0

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.0

$TEST #320
-------------- PARSING TARGET --------------
  @raw : (-2.1)^2
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] NUM
      @val: 2
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 7

    [3] OP
      @val: POW
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1^2
    @postfix: 2.1 - 2 ^
    @prefix : ^ 2.1 - 2

------------ INTERPRETING TARGET -----------
  @infix : -2.1^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 4.41

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

4.41

$TEST #321
-------------- PARSING TARGET --------------
  @raw : (-2.1)^2.1      
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] NUM
      @val: 2.1
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 7

    [3] OP
      @val: POW
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1^2.1
    @postfix: 2.1 - 2.1 ^
    @prefix : ^ 2.1 - 2.1

------------ INTERPRETING TARGET -----------
  @infix : -2.1^2.1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Power operation with negative noninteger base and noninteger exponent may cause unexpected behaviors.                   

nan

$TEST #322
-------------- PARSING TARGET --------------
  @raw : (-2.1)^(-2)
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: LPAR
      @pos: 7

    [6] OP
      @val: MINUS
      @pos: 8

    [7] NUM
      @val: 2
      @pos: 9

    [8] OP
      @val: RPAR
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 9

    [3] OP
      @val: MINUS
      @pos: 8

    [4] OP
      @val: POW
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1^-2
    @postfix: 2.1 - 2 - ^
    @prefix : ^ 2.1 - 2 -

------------ INTERPRETING TARGET -----------
  @infix : -2.1^-2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.22675736961451246

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.22675736961451246

$TEST #323
-------------- PARSING TARGET --------------
  @raw : (-2.1)^(-2.1)   
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 5

    [4] OP
      @val: POW
      @pos: 6

    [5] OP
      @val: LPAR
      @pos: 7

    [6] OP
      @val: MINUS
      @pos: 8

    [7] NUM
      @val: 2.1
      @pos: 9

    [8] OP
      @val: RPAR
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2.1
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2.1
      @pos: 9

    [3] OP
      @val: MINUS
      @pos: 8

    [4] OP
      @val: POW
      @pos: 6

  Running AST generator................ [1;36mdone[0m
    @infix  : -2.1^-2.1
    @postfix: 2.1 - 2.1 - ^
    @prefix : ^ 2.1 - 2.1 -

------------ INTERPRETING TARGET -----------
  @infix : -2.1^-2.1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Power operation with negative noninteger base and noninteger exponent may cause unexpected behaviors.                   

nan

$TEST #324
-------------- PARSING TARGET --------------
  @raw : (x^2)^3
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

    [2] OP
      @val: POW
      @pos: 2

    [3] NUM
      @val: 2
      @pos: 3

    [4] OP
      @val: RPAR
      @pos: 4

    [5] OP
      @val: POW
      @pos: 5

    [6] NUM
      @val: 3
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] NUM
      @val: 2
      @pos: 3

    [2] OP
      @val: POW
      @pos: 2

    [3] NUM
      @val: 3
      @pos: 6

    [4] OP
      @val: POW
      @pos: 5

  Running AST generator................ [1;36mdone[0m
    @infix  : (x^2)^3
    @postfix: x 2 ^ 3 ^
    @prefix : ^ x 2 ^ 3

------------ INTERPRETING TARGET -----------
  @infix : (x^2)^3

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x^6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x^6

$TEST #325
-------------- PARSING TARGET --------------
  @raw : ((2^x)^3)^4
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 2

    [3] OP
      @val: POW
      @pos: 3

    [4] VAR
      @val: x
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

    [6] OP
      @val: POW
      @pos: 6

    [7] NUM
      @val: 3
      @pos: 7

    [8] OP
      @val: RPAR
      @pos: 8

    [9] OP
      @val: POW
      @pos: 9

    [10] NUM
      @val: 4
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 2

    [1] VAR
      @val: x
      @pos: 4

    [2] OP
      @val: POW
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 7

    [4] OP
      @val: POW
      @pos: 6

    [5] NUM
      @val: 4
      @pos: 10

    [6] OP
      @val: POW
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : ((2^x)^3)^4
    @postfix: 2 x ^ 3 ^ 4 ^
    @prefix : ^ 2 x ^ 3 ^ 4

------------ INTERPRETING TARGET -----------
  @infix : ((2^x)^3)^4

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (2^x)^12

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(2^x)^12

$TEST #326
-------------- PARSING TARGET --------------
  @raw : ((x^2)^3)^y
  @size: 11 chars (60 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: POW
      @pos: 3

    [4] NUM
      @val: 2
      @pos: 4

    [5] OP
      @val: RPAR
      @pos: 5

    [6] OP
      @val: POW
      @pos: 6

    [7] NUM
      @val: 3
      @pos: 7

    [8] OP
      @val: RPAR
      @pos: 8

    [9] OP
      @val: POW
      @pos: 9

    [10] VAR
      @val: y
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 2
      @pos: 4

    [2] OP
      @val: POW
      @pos: 3

    [3] NUM
      @val: 3
      @pos: 7

    [4] OP
      @val: POW
      @pos: 6

    [5] VAR
      @val: y
      @pos: 10

    [6] OP
      @val: POW
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : ((x^2)^3)^y
    @postfix: x 2 ^ 3 ^ y ^
    @prefix : ^ x 2 ^ 3 ^ y

------------ INTERPRETING TARGET -----------
  @infix : ((x^2)^3)^y

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (x^6)^y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(x^6)^y

$TEST #327
-------------- PARSING TARGET --------------
  @raw : x^1
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 1
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 1
      @pos: 2

    [2] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : x^1
    @postfix: x 1 ^
    @prefix : ^ x 1

------------ INTERPRETING TARGET -----------
  @infix : x^1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #328
-------------- PARSING TARGET --------------
  @raw : (-x)^1
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] NUM
      @val: 1
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 1
      @pos: 5

    [3] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^1
    @postfix: x - 1 ^
    @prefix : ^ x - 1

------------ INTERPRETING TARGET -----------
  @infix : -x^1

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-x

$TEST #329
-------------- PARSING TARGET --------------
  @raw : x^0
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] NUM
      @val: 0
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 2

    [2] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : x^0
    @postfix: x 0 ^
    @prefix : ^ x 0

------------ INTERPRETING TARGET -----------
  @infix : x^0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1

$TEST #330
-------------- PARSING TARGET --------------
  @raw : (-x)^0
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] NUM
      @val: 0
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^0
    @postfix: x - 0 ^
    @prefix : ^ x - 0

------------ INTERPRETING TARGET -----------
  @infix : -x^0

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1

$TEST #331
-------------- PARSING TARGET --------------
  @raw : (-x)^2
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] NUM
      @val: 2
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^2
    @postfix: x - 2 ^
    @prefix : ^ x - 2

------------ INTERPRETING TARGET -----------
  @infix : -x^2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x^2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x^2

$TEST #332
-------------- PARSING TARGET --------------
  @raw : (-x)^(-2)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: LPAR
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: RPAR
      @pos: 3

    [4] OP
      @val: POW
      @pos: 4

    [5] OP
      @val: LPAR
      @pos: 5

    [6] OP
      @val: MINUS
      @pos: 6

    [7] NUM
      @val: 2
      @pos: 7

    [8] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 7

    [3] OP
      @val: MINUS
      @pos: 6

    [4] OP
      @val: POW
      @pos: 4

  Running AST generator................ [1;36mdone[0m
    @infix  : -x^-2
    @postfix: x - 2 - ^
    @prefix : ^ x - 2 -

------------ INTERPRETING TARGET -----------
  @infix : -x^-2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x^-2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x^-2

$TEST #333
-------------- PARSING TARGET --------------
  @raw : x^(0 / 0)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] OP
      @val: POW
      @pos: 1

    [2] OP
      @val: LPAR
      @pos: 2

    [3] NUM
      @val: 0
      @pos: 3

    [4] OP
      @val: DIV
      @pos: 5

    [5] NUM
      @val: 0
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 0

    [1] NUM
      @val: 0
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 7

    [3] OP
      @val: DIV
      @pos: 5

    [4] OP
      @val: POW
      @pos: 1

  Running AST generator................ [1;36mdone[0m
    @infix  : x^(0 / 0)
    @postfix: x 0 0 / ^
    @prefix : ^ x 0 0 /

------------ INTERPRETING TARGET -----------
  @infix : x^(0 / 0)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 2nd operand of power operation. This may cause unexpected behaviors.                                               

nan

$TEST #334
-------------- PARSING TARGET --------------
  @raw : +x
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: PLUS
      @pos: 0

    [1] VAR
      @val: x
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 1

    [1] OP
      @val: PLUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : +x
    @postfix: x +
    @prefix : + x

------------ INTERPRETING TARGET -----------
  @infix : +x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #335
-------------- PARSING TARGET --------------
  @raw : +2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: PLUS
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] OP
      @val: PLUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : +2
    @postfix: 2 +
    @prefix : + 2

------------ INTERPRETING TARGET -----------
  @infix : +2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #336
-------------- PARSING TARGET --------------
  @raw : -2
  @size: 2 chars (51 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] NUM
      @val: 2
      @pos: 1

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 1

    [1] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -2
    @postfix: 2 -
    @prefix : - 2

------------ INTERPRETING TARGET -----------
  @infix : -2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-2

$TEST #337
-------------- PARSING TARGET --------------
  @raw : --2
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] NUM
      @val: 2
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : --2
    @postfix: 2 - -
    @prefix : - 2 -

------------ INTERPRETING TARGET -----------
  @infix : --2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

2

$TEST #338
-------------- PARSING TARGET --------------
  @raw : --x
  @size: 3 chars (52 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: MINUS
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] OP
      @val: MINUS
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : --x
    @postfix: x - -
    @prefix : - x -

------------ INTERPRETING TARGET -----------
  @infix : --x

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #339
-------------- PARSING TARGET --------------
  @raw : -(x * 2)
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] NUM
      @val: 2
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 2
      @pos: 6

    [2] OP
      @val: MUL
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * 2)
    @postfix: x 2 * -
    @prefix : - x 2 *

------------ INTERPRETING TARGET -----------
  @infix : -(x * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -2

$TEST #340
-------------- PARSING TARGET --------------
  @raw : -(x / 2)
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 2
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 2
      @pos: 6

    [2] OP
      @val: DIV
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x / 2)
    @postfix: x 2 / -
    @prefix : - x 2 /

------------ INTERPRETING TARGET -----------
  @infix : -(x / 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -0.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -0.5

$TEST #341
-------------- PARSING TARGET --------------
  @raw : -(x * -2)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] OP
      @val: MINUS
      @pos: 6

    [5] NUM
      @val: 2
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 2
      @pos: 7

    [2] OP
      @val: MINUS
      @pos: 6

    [3] OP
      @val: MUL
      @pos: 4

    [4] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * -2)
    @postfix: x 2 - * -
    @prefix : - x 2 - *

------------ INTERPRETING TARGET -----------
  @infix : -(x * -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 2

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 2

$TEST #342
-------------- PARSING TARGET --------------
  @raw : -(x / -2)
  @size: 9 chars (58 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] OP
      @val: MINUS
      @pos: 6

    [5] NUM
      @val: 2
      @pos: 7

    [6] OP
      @val: RPAR
      @pos: 8

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 2
      @pos: 7

    [2] OP
      @val: MINUS
      @pos: 6

    [3] OP
      @val: DIV
      @pos: 4

    [4] OP
      @val: MINUS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x / -2)
    @postfix: x 2 - / -
    @prefix : - x 2 - /

------------ INTERPRETING TARGET -----------
  @infix : -(x / -2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 0.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 0.5

$TEST #343
-------------- PARSING TARGET --------------
  @raw : 2 + -(x + 3)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: ADD
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: x
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] NUM
      @val: 3
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 6

    [2] NUM
      @val: 3
      @pos: 10

    [3] OP
      @val: ADD
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: ADD
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 + -(x + 3)
    @postfix: 2 x 3 + - +
    @prefix : + 2 x 3 + -

------------ INTERPRETING TARGET -----------
  @infix : 2 + -(x + 3)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(1 + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(1 + x)

$TEST #344
-------------- PARSING TARGET --------------
  @raw : 2 - -(x + 3)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: SUB
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: x
      @pos: 6

    [5] OP
      @val: ADD
      @pos: 8

    [6] NUM
      @val: 3
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 6

    [2] NUM
      @val: 3
      @pos: 10

    [3] OP
      @val: ADD
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: SUB
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 - -(x + 3)
    @postfix: 2 x 3 + - -
    @prefix : - 2 x 3 + -

------------ INTERPRETING TARGET -----------
  @infix : 2 - -(x + 3)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 5 + x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

5 + x

$TEST #345
-------------- PARSING TARGET --------------
  @raw : -(x + 3) + 2
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: ADD
      @pos: 9

    [7] NUM
      @val: 2
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] NUM
      @val: 2
      @pos: 11

    [5] OP
      @val: ADD
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + 3) + 2
    @postfix: x 3 + - 2 +
    @prefix : + x 3 + - 2

------------ INTERPRETING TARGET -----------
  @infix : -(x + 3) + 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + 1)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + 1)

$TEST #346
-------------- PARSING TARGET --------------
  @raw : -(x + 3) - 2
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: ADD
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] NUM
      @val: 2
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: ADD
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] NUM
      @val: 2
      @pos: 11

    [5] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x + 3) - 2
    @postfix: x 3 + - 2 -
    @prefix : - x 3 + - 2

------------ INTERPRETING TARGET -----------
  @infix : -(x + 3) - 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + 5)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + 5)

$TEST #347
-------------- PARSING TARGET --------------
  @raw : -(x - 3) + -(y + 2)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: SUB
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: ADD
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: y
      @pos: 13

    [10] OP
      @val: ADD
      @pos: 15

    [11] NUM
      @val: 2
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: SUB
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: y
      @pos: 13

    [5] NUM
      @val: 2
      @pos: 17

    [6] OP
      @val: ADD
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: ADD
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x - 3) + -(y + 2)
    @postfix: x 3 - - y 2 + - +
    @prefix : + x 3 - - y 2 + -

------------ INTERPRETING TARGET -----------
  @infix : -(x - 3) + -(y + 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -(x + -1 + y)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-(x + -1 + y)

$TEST #348
-------------- PARSING TARGET --------------
  @raw : -(x - 3) - -(y + 2)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: SUB
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: SUB
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: y
      @pos: 13

    [10] OP
      @val: ADD
      @pos: 15

    [11] NUM
      @val: 2
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: SUB
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: y
      @pos: 13

    [5] NUM
      @val: 2
      @pos: 17

    [6] OP
      @val: ADD
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: SUB
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x - 3) - -(y + 2)
    @postfix: x 3 - - y 2 + - -
    @prefix : - x 3 - - y 2 + -

------------ INTERPRETING TARGET -----------
  @infix : -(x - 3) - -(y + 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: y + -(-5 + x)

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

y + -(-5 + x)

$TEST #349
-------------- PARSING TARGET --------------
  @raw : 2 * -(x * 3)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: MUL
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: x
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] NUM
      @val: 3
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 6

    [2] NUM
      @val: 3
      @pos: 10

    [3] OP
      @val: MUL
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: MUL
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 * -(x * 3)
    @postfix: 2 x 3 * - *
    @prefix : * 2 x 3 * -

------------ INTERPRETING TARGET -----------
  @infix : 2 * -(x * 3)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -6 * x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-6 * x

$TEST #350
-------------- PARSING TARGET --------------
  @raw : 2 / -(x * 3)
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] OP
      @val: DIV
      @pos: 2

    [2] OP
      @val: MINUS
      @pos: 4

    [3] OP
      @val: LPAR
      @pos: 5

    [4] VAR
      @val: x
      @pos: 6

    [5] OP
      @val: MUL
      @pos: 8

    [6] NUM
      @val: 3
      @pos: 10

    [7] OP
      @val: RPAR
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 0

    [1] VAR
      @val: x
      @pos: 6

    [2] NUM
      @val: 3
      @pos: 10

    [3] OP
      @val: MUL
      @pos: 8

    [4] OP
      @val: MINUS
      @pos: 4

    [5] OP
      @val: DIV
      @pos: 2

  Running AST generator................ [1;36mdone[0m
    @infix  : 2 / -(x * 3)
    @postfix: 2 x 3 * - /
    @prefix : / 2 x 3 * -

------------ INTERPRETING TARGET -----------
  @infix : 2 / -(x * 3)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: (-1.5 * x)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

(-1.5 * x)^-1

$TEST #351
-------------- PARSING TARGET --------------
  @raw : -(x * 3) * 2
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] NUM
      @val: 2
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: MUL
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] NUM
      @val: 2
      @pos: 11

    [5] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * 3) * 2
    @postfix: x 3 * - 2 *
    @prefix : * x 3 * - 2

------------ INTERPRETING TARGET -----------
  @infix : -(x * 3) * 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -6

$TEST #352
-------------- PARSING TARGET --------------
  @raw : -(x * 3) / 2
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: MUL
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: DIV
      @pos: 9

    [7] NUM
      @val: 2
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: MUL
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] NUM
      @val: 2
      @pos: 11

    [5] OP
      @val: DIV
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x * 3) / 2
    @postfix: x 3 * - 2 /
    @prefix : / x 3 * - 2

------------ INTERPRETING TARGET -----------
  @infix : -(x * 3) / 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -1.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -1.5

$TEST #353
-------------- PARSING TARGET --------------
  @raw : -(x / 3) * -(y * 2)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: MUL
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: y
      @pos: 13

    [10] OP
      @val: MUL
      @pos: 15

    [11] NUM
      @val: 2
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: DIV
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: y
      @pos: 13

    [5] NUM
      @val: 2
      @pos: 17

    [6] OP
      @val: MUL
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: MUL
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x / 3) * -(y * 2)
    @postfix: x 3 / - y 2 * - *
    @prefix : * x 3 / - y 2 * -

------------ INTERPRETING TARGET -----------
  @infix : -(x / 3) * -(y * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 0.6666666666666666 * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 0.6666666666666666 * y

$TEST #354
-------------- PARSING TARGET --------------
  @raw : -(x / 3) / -(y * 2)
  @size: 19 chars (68 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] VAR
      @val: x
      @pos: 2

    [3] OP
      @val: DIV
      @pos: 4

    [4] NUM
      @val: 3
      @pos: 6

    [5] OP
      @val: RPAR
      @pos: 7

    [6] OP
      @val: DIV
      @pos: 9

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: LPAR
      @pos: 12

    [9] VAR
      @val: y
      @pos: 13

    [10] OP
      @val: MUL
      @pos: 15

    [11] NUM
      @val: 2
      @pos: 17

    [12] OP
      @val: RPAR
      @pos: 18

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 2

    [1] NUM
      @val: 3
      @pos: 6

    [2] OP
      @val: DIV
      @pos: 4

    [3] OP
      @val: MINUS
      @pos: 0

    [4] VAR
      @val: y
      @pos: 13

    [5] NUM
      @val: 2
      @pos: 17

    [6] OP
      @val: MUL
      @pos: 15

    [7] OP
      @val: MINUS
      @pos: 11

    [8] OP
      @val: DIV
      @pos: 9

  Running AST generator................ [1;36mdone[0m
    @infix  : -(x / 3) / -(y * 2)
    @postfix: x 3 / - y 2 * - /
    @prefix : / x 3 / - y 2 * -

------------ INTERPRETING TARGET -----------
  @infix : -(x / 3) / -(y * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (y * 6.0)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (y * 6.0)^-1

$TEST #355
-------------- PARSING TARGET --------------
  @raw : -(-x * -3) * 2
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] VAR
      @val: x
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 3
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

    [8] OP
      @val: MUL
      @pos: 11

    [9] NUM
      @val: 2
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 3

    [1] OP
      @val: MINUS
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 0

    [6] NUM
      @val: 2
      @pos: 13

    [7] OP
      @val: MUL
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : -(-x * -3) * 2
    @postfix: x - 3 - * - 2 *
    @prefix : * x - 3 - * - 2

------------ INTERPRETING TARGET -----------
  @infix : -(-x * -3) * 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -6

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -6

$TEST #356
-------------- PARSING TARGET --------------
  @raw : -(-x * -3) / 2
  @size: 14 chars (63 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] VAR
      @val: x
      @pos: 3

    [4] OP
      @val: MUL
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 3
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

    [8] OP
      @val: DIV
      @pos: 11

    [9] NUM
      @val: 2
      @pos: 13

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 3

    [1] OP
      @val: MINUS
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: MUL
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 0

    [6] NUM
      @val: 2
      @pos: 13

    [7] OP
      @val: DIV
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : -(-x * -3) / 2
    @postfix: x - 3 - * - 2 /
    @prefix : / x - 3 - * - 2

------------ INTERPRETING TARGET -----------
  @infix : -(-x * -3) / 2

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * -1.5

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * -1.5

$TEST #357
-------------- PARSING TARGET --------------
  @raw : -(-x / -3) * -(y * 2)
  @size: 21 chars (70 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] VAR
      @val: x
      @pos: 3

    [4] OP
      @val: DIV
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 3
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

    [8] OP
      @val: MUL
      @pos: 11

    [9] OP
      @val: MINUS
      @pos: 13

    [10] OP
      @val: LPAR
      @pos: 14

    [11] VAR
      @val: y
      @pos: 15

    [12] OP
      @val: MUL
      @pos: 17

    [13] NUM
      @val: 2
      @pos: 19

    [14] OP
      @val: RPAR
      @pos: 20

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 3

    [1] OP
      @val: MINUS
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: DIV
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 0

    [6] VAR
      @val: y
      @pos: 15

    [7] NUM
      @val: 2
      @pos: 19

    [8] OP
      @val: MUL
      @pos: 17

    [9] OP
      @val: MINUS
      @pos: 13

    [10] OP
      @val: MUL
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : -(-x / -3) * -(y * 2)
    @postfix: x - 3 - / - y 2 * - *
    @prefix : * x - 3 - / - y 2 * -

------------ INTERPRETING TARGET -----------
  @infix : -(-x / -3) * -(y * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * 0.6666666666666666 * y

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * 0.6666666666666666 * y

$TEST #358
-------------- PARSING TARGET --------------
  @raw : -(-x / -3) / -(y * 2)
  @size: 21 chars (70 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] OP
      @val: MINUS
      @pos: 0

    [1] OP
      @val: LPAR
      @pos: 1

    [2] OP
      @val: MINUS
      @pos: 2

    [3] VAR
      @val: x
      @pos: 3

    [4] OP
      @val: DIV
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 7

    [6] NUM
      @val: 3
      @pos: 8

    [7] OP
      @val: RPAR
      @pos: 9

    [8] OP
      @val: DIV
      @pos: 11

    [9] OP
      @val: MINUS
      @pos: 13

    [10] OP
      @val: LPAR
      @pos: 14

    [11] VAR
      @val: y
      @pos: 15

    [12] OP
      @val: MUL
      @pos: 17

    [13] NUM
      @val: 2
      @pos: 19

    [14] OP
      @val: RPAR
      @pos: 20

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 3

    [1] OP
      @val: MINUS
      @pos: 2

    [2] NUM
      @val: 3
      @pos: 8

    [3] OP
      @val: MINUS
      @pos: 7

    [4] OP
      @val: DIV
      @pos: 5

    [5] OP
      @val: MINUS
      @pos: 0

    [6] VAR
      @val: y
      @pos: 15

    [7] NUM
      @val: 2
      @pos: 19

    [8] OP
      @val: MUL
      @pos: 17

    [9] OP
      @val: MINUS
      @pos: 13

    [10] OP
      @val: DIV
      @pos: 11

  Running AST generator................ [1;36mdone[0m
    @infix  : -(-x / -3) / -(y * 2)
    @postfix: x - 3 - / - y 2 * - /
    @prefix : / x - 3 - / - y 2 * -

------------ INTERPRETING TARGET -----------
  @infix : -(-x / -3) / -(y * 2)

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x * (y * 6.0)^-1

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x * (y * 6.0)^-1

$TEST #359
-------------- PARSING TARGET --------------
  @raw : Sin[0 / 0]  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[0 / 0]
    @postfix: 0 0 / Sin
    @prefix : Sin / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Sin[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Sin. This may cause unexpected behaviors.                                             

nan

$TEST #360
-------------- PARSING TARGET --------------
  @raw : Sin[2 / 0]  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2 / 0]
    @postfix: 2 0 / Sin
    @prefix : Sin / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Sin[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Sin. This may cause unexpected behaviors.                                             

nan

$TEST #361
-------------- PARSING TARGET --------------
  @raw : Sin[-2 / 0] 
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[-2 / 0]
    @postfix: 2 - 0 / Sin
    @prefix : Sin / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Sin[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Sin. This may cause unexpected behaviors.                                             

nan

$TEST #362
-------------- PARSING TARGET --------------
  @raw : Sin[2]
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[2]
    @postfix: 2 Sin
    @prefix : Sin 2

------------ INTERPRETING TARGET -----------
  @infix : Sin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.9092974268256817

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.9092974268256817

$TEST #363
-------------- PARSING TARGET --------------
  @raw : Sin[-x]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: x
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[-x]
    @postfix: x - Sin
    @prefix : Sin - x

------------ INTERPRETING TARGET -----------
  @infix : Sin[-x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -Sin[x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-Sin[x]

$TEST #364
-------------- PARSING TARGET --------------
  @raw : Sin[Asin[x]]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] FUN
      @val: ASIN
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VAR
      @val: x
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 9

    [1] FUN
      @val: ASIN
      @pos: 4

    [2] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[Asin[x]]
    @postfix: x Asin Sin
    @prefix : Sin Asin x

------------ INTERPRETING TARGET -----------
  @infix : Sin[Asin[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #365
-------------- PARSING TARGET --------------
  @raw : Sin[-Asin[x]]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: SIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: ASIN
      @pos: 5

    [4] DELIM
      @val: START
      @pos: 9

    [5] VAR
      @val: x
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

    [7] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 10

    [1] FUN
      @val: ASIN
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: SIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Sin[-Asin[x]]
    @postfix: x Asin - Sin
    @prefix : Sin - x Asin

------------ INTERPRETING TARGET -----------
  @infix : Sin[-Asin[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-x

$TEST #366
-------------- PARSING TARGET --------------
  @raw : Cos[0 / 0]  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[0 / 0]
    @postfix: 0 0 / Cos
    @prefix : Cos / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Cos[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Cos. This may cause unexpected behaviors.                                             

nan

$TEST #367
-------------- PARSING TARGET --------------
  @raw : Cos[2 / 0]  
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[2 / 0]
    @postfix: 2 0 / Cos
    @prefix : Cos / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Cos[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Cos. This may cause unexpected behaviors.                                             

nan

$TEST #368
-------------- PARSING TARGET --------------
  @raw : Cos[-2 / 0] 
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[-2 / 0]
    @postfix: 2 - 0 / Cos
    @prefix : Cos / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Cos[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Cos. This may cause unexpected behaviors.                                             

nan

$TEST #369
-------------- PARSING TARGET --------------
  @raw : Cos[2]
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[2]
    @postfix: 2 Cos
    @prefix : Cos 2

------------ INTERPRETING TARGET -----------
  @infix : Cos[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -0.4161468365471424

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-0.4161468365471424

$TEST #370
-------------- PARSING TARGET --------------
  @raw : Cos[-x]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: x
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[-x]
    @postfix: x - Cos
    @prefix : Cos - x

------------ INTERPRETING TARGET -----------
  @infix : Cos[-x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: Cos[x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Cos[x]

$TEST #371
-------------- PARSING TARGET --------------
  @raw : Cos[Acos[x]]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] FUN
      @val: ACOS
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VAR
      @val: x
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 9

    [1] FUN
      @val: ACOS
      @pos: 4

    [2] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[Acos[x]]
    @postfix: x Acos Cos
    @prefix : Cos Acos x

------------ INTERPRETING TARGET -----------
  @infix : Cos[Acos[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #372
-------------- PARSING TARGET --------------
  @raw : Cos[-Acos[x]]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: COS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: ACOS
      @pos: 5

    [4] DELIM
      @val: START
      @pos: 9

    [5] VAR
      @val: x
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

    [7] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 10

    [1] FUN
      @val: ACOS
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: COS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Cos[-Acos[x]]
    @postfix: x Acos - Cos
    @prefix : Cos - x Acos

------------ INTERPRETING TARGET -----------
  @infix : Cos[-Acos[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #373
-------------- PARSING TARGET --------------
  @raw : Tan[0 / 0]          
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 0
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[0 / 0]
    @postfix: 0 0 / Tan
    @prefix : Tan / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Tan[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Tan. This may cause unexpected behaviors.                                             

nan

$TEST #374
-------------- PARSING TARGET --------------
  @raw : Tan[2 / 0]          
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] OP
      @val: DIV
      @pos: 6

    [4] NUM
      @val: 0
      @pos: 8

    [5] DELIM
      @val: END
      @pos: 9

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] NUM
      @val: 0
      @pos: 8

    [2] OP
      @val: DIV
      @pos: 6

    [3] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[2 / 0]
    @postfix: 2 0 / Tan
    @prefix : Tan / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Tan[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Tan. This may cause unexpected behaviors.                                             

nan

$TEST #375
-------------- PARSING TARGET --------------
  @raw : Tan[-2 / 0]         
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] NUM
      @val: 2
      @pos: 5

    [4] OP
      @val: DIV
      @pos: 7

    [5] NUM
      @val: 0
      @pos: 9

    [6] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 9

    [3] OP
      @val: DIV
      @pos: 7

    [4] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[-2 / 0]
    @postfix: 2 - 0 / Tan
    @prefix : Tan / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Tan[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Tan. This may cause unexpected behaviors.                                             

nan

$TEST #376
-------------- PARSING TARGET --------------
  @raw : Tan[10 * Pi / 2]    
  @size: 20 chars (69 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 10
      @pos: 4

    [3] OP
      @val: MUL
      @pos: 7

    [4] NUM
      @val: 3.141592653589793
      @pos: 9

    [5] OP
      @val: DIV
      @pos: 12

    [6] NUM
      @val: 2
      @pos: 14

    [7] DELIM
      @val: END
      @pos: 15

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 10
      @pos: 4

    [1] NUM
      @val: 3.141592653589793
      @pos: 9

    [2] OP
      @val: MUL
      @pos: 7

    [3] NUM
      @val: 2
      @pos: 14

    [4] OP
      @val: DIV
      @pos: 12

    [5] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[10 * 3.141592653589793 / 2]
    @postfix: 10 3.141592653589793 * 2 / Tan
    @prefix : Tan / 10 3.141592653589793 * 2

------------ INTERPRETING TARGET -----------
  @infix : Tan[10 * 3.141592653589793 / 2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -6.123233995736766e-16

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Tangent of real which is integer multiple of pi/2 may cause unexpected behaviors. Use Help["Tan"] for more information. 

-6.123233995736766e-16

$TEST #377
-------------- PARSING TARGET --------------
  @raw : Tan[2]
  @size: 6 chars (55 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] NUM
      @val: 2
      @pos: 4

    [3] DELIM
      @val: END
      @pos: 5

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 4

    [1] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[2]
    @postfix: 2 Tan
    @prefix : Tan 2

------------ INTERPRETING TARGET -----------
  @infix : Tan[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -2.185039863261519

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-2.185039863261519

$TEST #378
-------------- PARSING TARGET --------------
  @raw : Tan[-x]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] VAR
      @val: x
      @pos: 5

    [4] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 5

    [1] OP
      @val: MINUS
      @pos: 4

    [2] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[-x]
    @postfix: x - Tan
    @prefix : Tan - x

------------ INTERPRETING TARGET -----------
  @infix : Tan[-x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: Tan[x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

Tan[x]

$TEST #379
-------------- PARSING TARGET --------------
  @raw : Tan[Atan[x]]
  @size: 12 chars (61 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] FUN
      @val: ATAN
      @pos: 4

    [3] DELIM
      @val: START
      @pos: 8

    [4] VAR
      @val: x
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 9

    [1] FUN
      @val: ATAN
      @pos: 4

    [2] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[Atan[x]]
    @postfix: x Atan Tan
    @prefix : Tan Atan x

------------ INTERPRETING TARGET -----------
  @infix : Tan[Atan[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #380
-------------- PARSING TARGET --------------
  @raw : Tan[-Atan[x]]
  @size: 13 chars (62 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: TAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 3

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: ATAN
      @pos: 5

    [4] DELIM
      @val: START
      @pos: 9

    [5] VAR
      @val: x
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

    [7] DELIM
      @val: END
      @pos: 12

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 10

    [1] FUN
      @val: ATAN
      @pos: 5

    [2] OP
      @val: MINUS
      @pos: 4

    [3] FUN
      @val: TAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Tan[-Atan[x]]
    @postfix: x Atan - Tan
    @prefix : Tan - x Atan

------------ INTERPRETING TARGET -----------
  @infix : Tan[-Atan[x]]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: x

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

x

$TEST #381
-------------- PARSING TARGET --------------
  @raw : Asin[0 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[0 / 0]
    @postfix: 0 0 / Asin
    @prefix : Asin / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Asin[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Asin. This may cause unexpected behaviors.                                             

nan

$TEST #382
-------------- PARSING TARGET --------------
  @raw : Asin[2 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[2 / 0]
    @postfix: 2 0 / Asin
    @prefix : Asin / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Asin[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Asin. This may cause unexpected behaviors.                                             

nan

$TEST #383
-------------- PARSING TARGET --------------
  @raw : Asin[-2 / 0]    
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 2
      @pos: 6

    [4] OP
      @val: DIV
      @pos: 8

    [5] NUM
      @val: 0
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 6

    [1] OP
      @val: MINUS
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 10

    [3] OP
      @val: DIV
      @pos: 8

    [4] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[-2 / 0]
    @postfix: 2 - 0 / Asin
    @prefix : Asin / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Asin[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Asin. This may cause unexpected behaviors.                                             

nan

$TEST #384
-------------- PARSING TARGET --------------
  @raw : Asin[2]         
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[2]
    @postfix: 2 Asin
    @prefix : Asin 2

------------ INTERPRETING TARGET -----------
  @infix : Asin[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Arcsine of real less than -1 or greater than 1 may cause unexpected behaviors. Use Help["Asin"] for more information.   

nan

$TEST #385
-------------- PARSING TARGET --------------
  @raw : Asin[1]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 1
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 1
      @pos: 5

    [1] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[1]
    @postfix: 1 Asin
    @prefix : Asin 1

------------ INTERPRETING TARGET -----------
  @infix : Asin[1]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1.5707963267948966

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1.5707963267948966

$TEST #386
-------------- PARSING TARGET --------------
  @raw : Asin[-x]
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ASIN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 5

    [3] VAR
      @val: x
      @pos: 6

    [4] DELIM
      @val: END
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 6

    [1] OP
      @val: MINUS
      @pos: 5

    [2] FUN
      @val: ASIN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Asin[-x]
    @postfix: x - Asin
    @prefix : Asin - x

------------ INTERPRETING TARGET -----------
  @infix : Asin[-x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -Asin[x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-Asin[x]

$TEST #387
-------------- PARSING TARGET --------------
  @raw : Acos[0 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ACOS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ACOS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Acos[0 / 0]
    @postfix: 0 0 / Acos
    @prefix : Acos / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Acos[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Acos. This may cause unexpected behaviors.                                             

nan

$TEST #388
-------------- PARSING TARGET --------------
  @raw : Acos[2 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ACOS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ACOS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Acos[2 / 0]
    @postfix: 2 0 / Acos
    @prefix : Acos / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Acos[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Acos. This may cause unexpected behaviors.                                             

nan

$TEST #389
-------------- PARSING TARGET --------------
  @raw : Acos[-2 / 0]    
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ACOS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 2
      @pos: 6

    [4] OP
      @val: DIV
      @pos: 8

    [5] NUM
      @val: 0
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 6

    [1] OP
      @val: MINUS
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 10

    [3] OP
      @val: DIV
      @pos: 8

    [4] FUN
      @val: ACOS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Acos[-2 / 0]
    @postfix: 2 - 0 / Acos
    @prefix : Acos / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Acos[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Acos. This may cause unexpected behaviors.                                             

nan

$TEST #390
-------------- PARSING TARGET --------------
  @raw : Acos[2]         
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ACOS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] FUN
      @val: ACOS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Acos[2]
    @postfix: 2 Acos
    @prefix : Acos 2

------------ INTERPRETING TARGET -----------
  @infix : Acos[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Arccosine of real less than -1 or greater than 1 may cause unexpected behaviors. Use Help["Acos"] for more information. 

nan

$TEST #391
-------------- PARSING TARGET --------------
  @raw : Acos[1]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ACOS
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 1
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 1
      @pos: 5

    [1] FUN
      @val: ACOS
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Acos[1]
    @postfix: 1 Acos
    @prefix : Acos 1

------------ INTERPRETING TARGET -----------
  @infix : Acos[1]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 0.0

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

0.0

$TEST #392
-------------- PARSING TARGET --------------
  @raw : Atan[0 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ATAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 0
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 0
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ATAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Atan[0 / 0]
    @postfix: 0 0 / Atan
    @prefix : Atan / 0 0

------------ INTERPRETING TARGET -----------
  @infix : Atan[0 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: nan

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Nan is detected at 1st parameter of Atan. This may cause unexpected behaviors.                                             

nan

$TEST #393
-------------- PARSING TARGET --------------
  @raw : Atan[2 / 0]     
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ATAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] OP
      @val: DIV
      @pos: 7

    [4] NUM
      @val: 0
      @pos: 9

    [5] DELIM
      @val: END
      @pos: 10

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] NUM
      @val: 0
      @pos: 9

    [2] OP
      @val: DIV
      @pos: 7

    [3] FUN
      @val: ATAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Atan[2 / 0]
    @postfix: 2 0 / Atan
    @prefix : Atan / 2 0

------------ INTERPRETING TARGET -----------
  @infix : Atan[2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1.5707963267948966

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Atan. This may cause unexpected behaviors.                                             

1.5707963267948966

$TEST #394
-------------- PARSING TARGET --------------
  @raw : Atan[-2 / 0]    
  @size: 16 chars (65 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ATAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 5

    [3] NUM
      @val: 2
      @pos: 6

    [4] OP
      @val: DIV
      @pos: 8

    [5] NUM
      @val: 0
      @pos: 10

    [6] DELIM
      @val: END
      @pos: 11

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 6

    [1] OP
      @val: MINUS
      @pos: 5

    [2] NUM
      @val: 0
      @pos: 10

    [3] OP
      @val: DIV
      @pos: 8

    [4] FUN
      @val: ATAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Atan[-2 / 0]
    @postfix: 2 - 0 / Atan
    @prefix : Atan / 2 - 0

------------ INTERPRETING TARGET -----------
  @infix : Atan[-2 / 0]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -1.5707963267948966

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

[0] [Interpreter] [1;36mWARNING[0m: Inf is detected at 2nd oeprand of multiplication. This may cause unexpected behaviors.                                               
[1] [Interpreter] [1;36mWARNING[0m: Inf is detected at 1st parameter of Atan. This may cause unexpected behaviors.                                             

-1.5707963267948966

$TEST #395
-------------- PARSING TARGET --------------
  @raw : Atan[2]
  @size: 7 chars (56 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ATAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] NUM
      @val: 2
      @pos: 5

    [3] DELIM
      @val: END
      @pos: 6

  Running infix to postfix converter... [1;36mdone[0m
    [0] NUM
      @val: 2
      @pos: 5

    [1] FUN
      @val: ATAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Atan[2]
    @postfix: 2 Atan
    @prefix : Atan 2

------------ INTERPRETING TARGET -----------
  @infix : Atan[2]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: 1.1071487177940906

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

1.1071487177940906

$TEST #396
-------------- PARSING TARGET --------------
  @raw : Atan[-x]
  @size: 8 chars (57 bytes)

-------------- PARSING CHAIN ---------------
  Initializing parser.................. [1;36mdone[0m
    @__infix  : 0 (cleared)
    @__postfix: 0 (cleared)

  Running lexer........................ [1;36mdone[0m
    [0] FUN
      @val: ATAN
      @pos: 0

    [1] DELIM
      @val: START
      @pos: 4

    [2] OP
      @val: MINUS
      @pos: 5

    [3] VAR
      @val: x
      @pos: 6

    [4] DELIM
      @val: END
      @pos: 7

  Running infix to postfix converter... [1;36mdone[0m
    [0] VAR
      @val: x
      @pos: 6

    [1] OP
      @val: MINUS
      @pos: 5

    [2] FUN
      @val: ATAN
      @pos: 0

  Running AST generator................ [1;36mdone[0m
    @infix  : Atan[-x]
    @postfix: x - Atan
    @prefix : Atan - x

------------ INTERPRETING TARGET -----------
  @infix : Atan[-x]

------------ INTERPRETING CHAIN ------------
  Running type checker................. [1;36mdone[0m
    @inferred: NUM

  Running simplifier................... [1;36mdone[0m
    @simplified: -Atan[x]

  Checking terminal condition.......... [1;36mdone[0m
    @result   : Terminate
    @iteration: 1

-Atan[x]

